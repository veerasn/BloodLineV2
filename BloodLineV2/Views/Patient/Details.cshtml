<!DOCTYPE html>
@using BloodLineV2.Models
@using BloodLineV2.ViewModels
@model IEnumerable<BloodLineV2.ViewModels.PatientDetailViewModel>

@{
    ViewBag.Title = ViewBag.PtName + " | " + ViewBag.PtRN;
}

<html>
<head>
    <title>UMMC Blood Transfusion Information System</title>
    <style>
        html, body, h1, h2, h3, h4, h5 {
            font-family: "Raleway", sans-serif
        }
    </style>
    <link href="~/Content/tagsinput.css" rel="stylesheet" />
    <link href="~/Content/css/all.css" rel="stylesheet">

    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script type="text/html" src="~/Scripts/chart-2.7.1.min.js"></script>
    <script src="~/Scripts/Chart.js"></script>
    <script type="text/javascript" src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script scr="~/Scripts/chartjs-plugin-annotation.js"></script>
    <script src="~/Scripts/tagsinput.js"></script>
    <script src="~/Scripts/bootstrap-input-spinner.js"></script>
    <script src="~/Scripts/JsBarcode.code128.min.js"></script>
</head>

<body class="w3-light-grey">

    <!-- Sidebar/menu -->
    <nav class="w3-sidebar w3-collapse w3-white w3-animate-left" style="z-index:3;width:300px;" id="mySidebar">
        <div class="w3-bar-block">
            <a href="#" class="w3-bar-item w3-button w3-padding-16 w3-hide-large w3-dark-grey w3-hover-black" onclick="w3_close()" title="close menu"><i class="fa fa-remove fa-fw"></i>  Close Menu</a>
            <a href="#" class="w3-bar-item w3-button w3-padding w3-blue"><i class="	fa fa-laptop-medical"></i>  Review and request</a>
            <a href="#" class="w3-bar-item w3-button w3-padding" data-toggle="modal" data-target="#review-requests">
                <i class="fa fa-vials"></i>  Prepare sample and submit
                <span class="badge badge-pill badge-danger" id="cart-unchecked">0</span>
            </a>
            <a href="#" class="w3-bar-item w3-button w3-padding" data-toggle="modal" data-target="#transfusion-monitor">
                <i class="fa fa-procedures"></i>  Transfuse and monitor
            </a>
            <a href="#" class="w3-bar-item w3-button w3-padding"><i class="fa fa-allergies"></i>  Adverse event reporting</a>
        </div>
        <hr />
        <div class="w3-container">
            <div class="card border-info">
                <h5 class="card-header">
                    Patient Info
                </h5>
                <div class="card-body">
                    <h4 class="card-title" id="unique-patient-name">@ViewBag.PtName</h4>
                    <h6 class="card-subtitle mb-2" id="unique-patient-id">@ViewBag.PtRN</h6>
                    <h6 class="card-subtitle mb-2" id="unique-patient-location">@ViewBag.PtLoc</h6>
                    <p class="card-text">@ViewBag.PtDob | @ViewBag.PtSex</p>
                    <div class="btn-group">
                        <button type="button" class="btn btn-primary w3-padding" data-toggle="modal" data-target="#cart">Request (<span class="total-count"></span>)</button>
                        <button class="clear-cart btn btn-danger w3-padding fa fa-trash"></button>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Overlay effect when opening sidebar on small screens -->
    <div class="w3-overlay w3-hide-large w3-animate-opacity" onclick="w3_close()" style="cursor:pointer" title="close side menu" id="myOverlay"></div>

    <!-- !PAGE CONTENT! -->
    <div class="w3-main" style="margin-left:300px;margin-top:43px;">
        <!--Patient Name Header-->
        <header class="w3-container">
            <h5 id="patient-demographics">
                <b>
                    <i class="fa fa-heart"></i> @ViewBag.PtName |
                    RN: @ViewBag.PtRN |
                    DOB: @ViewBag.PtDob | 
                    Sex: @ViewBag.PtSex
                </b>
            </h5>
        </header>
        <!--Patient Result Summary-->
        <div class="w3-container">
            <div class="card-group mb-4">
                <!--ABO and RhD-->
                <div class="card">
                    <div class="card border-info bg-info">
                        <h5 class="card-header">
                            ABO RhD
                            @if (ViewBag.RhErr > 0 || ViewBag.AboErr > 0)
                            {
                                <i class="fa fa-exclamation" data-toggle="tooltip" title="ABO typing discrepancy found."></i>
                            }
                            else
                            {
                                if (ViewBag.Abonum == 1)
                                {
                                    <i class="fa fa-bars" data-toggle="tooltip" title="Single ABO typing. ABO type unconfirmed."></i>
                                }
                                else if (ViewBag.Abonum > 1)
                                {
                                    <i class="fa fa-check-double" data-toggle="tooltip" title="ABO type confirmed"></i>
                                }
                                else
                                {
                                    <i class="fa fa-question" data-toggle="tooltip" title="No ABO type result available."></i>
                                }
                            }
                        </h5>
                        <div class="card-body">
                            <h1 class="card-title">
                                <b>@Html.DisplayFor(model => model.FirstOrDefault().PATGROUP) </b>
                            </h1>
                        </div>
                    </div>
                </div>
                <!--ABS-->
                <div class="card">
                    <div class="card border-warning bg-warning">
                        <h5 class="card-header">
                            Antibodies
                            @if (ViewBag.Absnum > 0 && ViewBag.AbsErr == 0)
                            {
                                <i class="fa fa-user-shield" data-toggle="tooltip" title="No atypical red cell antibodies found."></i>
                            }
                            else if (ViewBag.AbsErr > 0)
                            {
                                <i class="fa fa-exclamation" data-toggle="tooltip" title="Atypical red cell antibodies present. @Html.DisplayFor(model => model.FirstOrDefault().ANTIBODIES)"></i>
                            }
                            else
                            {
                                <i class="fa fa-question" data-toggle="tooltip" title="No red cell antibody screen results available."></i>
                            }
                        </h5>
                        <div class="card-body">
                            <h1 class="card-title">
                                @if (ViewBag.Absnum > 0 || ViewBag.AbsErr > 0)
                                {
                                    <b>@Html.DisplayFor(model => model.FirstOrDefault().ABSHORT)</b>
                                }
                                else
                                {
                                    <b>ABNTD</b>
                                }
                            </h1>
                        </div>
                    </div>
                </div>
                <!--EI-->
                <div class="card">
                    <div class="card border-danger bg-danger">
                        <h5 class="card-header">
                            Electronic RC Issue
                        </h5>
                        <div class="card-body">
                            <h1 class="card-title">
                                <b>@Html.DisplayFor(model => model.FirstOrDefault().EI)</b>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="w3-row-padding w3-margin-bottom">
            <!--Notifications and alerts-->
            <div class="w3-container w3-light-gray">
                <div>
                    @if (ViewBag.RhErr > 0 || ViewBag.AboErr > 0)
                    {
                    <h6>Discrepancy in blood grouping identified. Please contact the transfusion laboratory if clarification required.</h6>
                    }
                    else
                    {
                    if (ViewBag.Abonum > 1 && Model.FirstOrDefault().PATGROUP != null)
                    {
                    <h6>Blood group confirmed based on two or more determinations.</h6>
                    }
                    else if (ViewBag.Abonum == 1 && Model.FirstOrDefault().PATGROUP != null)
                    {
                    <h6>Blood group based on single determination. Please submit second sample for confirmation.</h6>
                    }
                    else
                    {
                    <h6>No valid blood group records available.</h6>
                    }
                    }
                </div>
                <div id="sample-validity-info">
                    @if (ViewBag.diffSample < 120 && ViewBag.ReqValidDate != "none")
                    {
                    <i class="fa fa-vial" data-toggle="tooltip" title="Sample < 5 days old stored  in transfusion lab."></i>
                    if (ViewBag.lastTransfusion < 28)
                    {
                    if (ViewBag.diffSample > 48)
                    {
                    <i class="fa fa-times-circle" style="color:#E74C3C;" data-toggle="tooltip" title="Available sample invalid for crossmatch."></i>
                    }
                    else
                    {
                    <i class="fa fa-check-square" style="color:#3498DB;" data-toggle="tooltip" title="Available sample valid for crossmatch. No additional samples required."></i>
                    }
                    }
                    else
                    {
                    <i class="fa fa-check-square" style="color:#3498DB;" data-toggle="tooltip" title="Available sample valid for crossmatch. No additional samples required."></i>
                    }
                    <sup>@Convert.ToDateTime(@ViewBag.ReqValidDate).ToString("dd/MM/yy HH:MM")</sup>
                    }

                    @if (ViewBag.InReserve > 0)
                    {
                    <i class="fa fa-first-aid" data-toggle="tooltip" title="Remaining red cell units in reserve ."></i>
                    <sup>@ViewBag.InReserve</sup>
                    }
                </div>
            </div>
        </div>
        <!--LMD Results and charts-->
        <!--Render charts for Hgb, Plt, INR and APT-->
        <div class="w3-container">
            @if (ViewBag.iHgb > 0)
            {
            <div class="w3-quarter">
                <canvas id="bar-chart-hgb" width="50" height="50"></canvas>
            </div>
            }
            @if (ViewBag.iPlt > 0)
            {
            <div class="w3-quarter">
                <canvas id="bar-chart-plt" width="50" height="50"></canvas>
            </div>
            }
            @if (ViewBag.iInr > 0)
            {
            <div class="w3-quarter">
                <canvas id="bar-chart-inr" width="50" height="50"></canvas>
            </div>
            }
            @if (ViewBag.iApt > 0)
            {
            <div class="w3-quarter">
                <canvas id="bar-chart-apt" width="50" height="50"></canvas>
            </div>
            }
        </div>
        <!--Hb chart-->
        @if (ViewBag.iHgb > 0)
        {
        <script type="text/javascript">
                var hgb_x = @Html.Raw(Json.Encode(ViewBag.xHb))
                var hgb_y = @Html.Raw(Json.Encode(ViewBag.yHb))
                var mcv_y = @Html.Raw(Json.Encode(ViewBag.yMcv))

                new Chart(document.getElementById("bar-chart-hgb"), {
                    type: 'bar',
                    data: {
                        labels: hgb_x,
                        datasets: [
                            {
                                label: "Hgb (g/L)",
                                backgroundColor: "#ff6666",
                                data: hgb_y
                            },
                            {
                                label: "MCV (fl)",
                                borderColor: "#cc0000",
                                data: mcv_y,
                                type: "line"
                            }
                        ]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "Haemoglobin (g/L)"
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Interval (days)'
                                }

                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,
                                    steps: 10,
                                    stepValue: 5,
                                    max:150
                                }
                            }],
                        },
                        annotation: {
                            annotations: [{
                                type: 'line',
                                mode: 'horizontal',
                                scaleID: 'y-axis-0',
                                value: 80,
                                borderColor: 'rgb(255,51,51)',
                                borderWidth: 4,
                                label: {
                                    enabled: false,
                                    content: 'Max limit'
                                }
                            }]
                        }
                    }
                });
        </script>
        }
        <!--Plt chart-->
        @if (ViewBag.iPlt > 0)
        {
        <script tyep="text/javascript">
                var plt_x = @Html.Raw(Json.Encode(ViewBag.xPlt))
                var plt_y = @Html.Raw(Json.Encode(ViewBag.yPlt))

                new Chart(document.getElementById("bar-chart-plt"), {
                    type: 'bar',
                    data: {
                        labels: plt_x,
                        datasets: [
                            {
                                label: "Platelet (x 10^9/L)",
                                backgroundColor: "#ffb266",
                                data: plt_y
                            }
                        ]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "Platelet (x 10^9/L)"
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Interval (days)'
                                }

                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,
                                    steps: 50,
                                    stepValue: 10,
                                    max:400
                                }
                            }],
                        },
                        annotation: {
                            annotations: [{
                                type: 'line',
                                mode: 'horizontal',
                                scaleID: 'y-axis-0',
                                value: 20,
                                borderColor: 'rgb(255,128,0)',
                                borderWidth: 4,
                                label: {
                                    enabled: false,
                                    content: 'Max limit'
                                }
                            }]
                        }
                    }
                });
        </script>
        }
        <!--INR chart-->
        @if (ViewBag.iInr > 0)
        {
        <script tyep="text/javascript">
                var inr_x = @Html.Raw(Json.Encode(ViewBag.xInr))
                var inr_y = @Html.Raw(Json.Encode(ViewBag.yInr))

                new Chart(document.getElementById("bar-chart-inr"), {
                    type: 'bar',
                    data: {
                        labels: inr_x,
                        datasets: [
                            {
                                label: "INR",
                                backgroundColor: "#66b2ff",
                                data: inr_y
                            }
                        ]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "INR"
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Interval (days)'
                                }

                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,
                                    steps: 1,
                                    stepValue: 0.5,
                                    max:6
                                }
                            }],
                        },
                        annotation: {
                            annotations: [{
                                type: 'line',
                                mode: 'horizontal',
                                scaleID: 'y-axis-0',
                                value: 1,
                                borderColor: 'rgb(0,128,255)',
                                borderWidth: 4,
                                label: {
                                    enabled: false,
                                    content: 'Max limit'
                                }
                            }]
                        }
                    }
                });
        </script>
        }
        <!--APT chart-->
        @if (ViewBag.iApt > 0)
        {
        <script type="text/javascript">
                var apt_x = @Html.Raw(Json.Encode(ViewBag.xApt))
                var apt_y = @Html.Raw(Json.Encode(ViewBag.yApt))

                new Chart(document.getElementById("bar-chart-apt"), {
                    type: 'bar',
                    data: {
                        labels: apt_x,
                        datasets: [
                            {
                                label: "APTT (sec)",
                                backgroundColor: "#cc0066",
                                data: apt_y
                            }
                        ]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "APTT (sec)"
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Interval (days)'
                                }

                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,
                                    steps: 10,
                                    stepValue: 5,
                                    max:60
                                }
                            }],
                        },
                        annotation: {
                            annotations: [{
                                type: 'line',
                                mode: 'horizontal',
                                scaleID: 'y-axis-0',
                                value: 34,
                                borderColor: 'rgb(0,0,255)',
                                borderWidth: 4,
                                label: {
                                    enabled: false,
                                    content: 'Max limit'
                                }
                            }]
                        }
                    }
                });
        </script>
        }
        <!-- Review results and transfusions -->
        <div class="w3-container">
            <div class="panel-group" id="accordion-review">
                <!-- Requests and results -->
                <div class="w3-panel w3-gray panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion-review" href="#collapse1">Requests and results</a>
                            <span class="badge badge-pill badge-primary">@ViewBag.TestCount</span>
                        </h5>
                    </div>
                    <div id="collapse1" class="panel-collapse collapse">
                        <div class="panel-body w3-light-gray">
                            @if (ViewBag.TestCount > 0)
                            {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Date </th>
                                        <th></th>
                                        <th>ABO</th>
                                        <th>Rh</th>
                                        <th>DAT</th>
                                        <th>Ab screen</th>
                                        <th>Ab ID</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{var res = ViewData["TestResults"] as string[,];
                                    for (int row = 0; row < res.GetLength(0); row++)
                                    {
                                    <tr>
                                        @for (int column = 0; column < res.GetLength(1); column++)
                                        {
                                        switch (column)
                                        {
                                        case 2:
                                        if (res[row, column] != null)
                                        {
                                        <td><i class="fa fa-vial"></i><sup>@res[row, column]</sup></td>
                                        }
                                        else
                                        {
                                        <td>@res[row, column]</td>
                                        };
                                        break;

                                        case 6:
                                        if (res[row, column] != null && res[row, column].Contains("POS"))
                                        {
                                        <td><b><font color="red">@res[row, column]</font></b></td>
                                        }
                                        else
                                        {
                                        <td>@res[row, column]</td>
                                        };
                                        break;

                                        case 7:
                                        if (res[row, column] != null)
                                        {
                                        <td><i class="fa fa-exclamation"></i></td>
                                        }
                                        else
                                        {
                                        <td>@res[row, column]</td>
                                        };
                                        break;

                                        default:
                                        <td>@res[row, column]</td>
                                        break;
                                        }
                                        }
                                    </tr>
                                    }
                                    }
                                </tbody>
                            </table>
                            }
                        </div>
                    </div>
                </div>
                <!-- Red Cells -->
                <div class="w3-panel w3-gray panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion-review" href="#collapse2">Red blood cells</a>
                            <span class="badge badge-pill badge-primary">@ViewBag.Rccount</span>
                            @if (ViewBag.Rccount > 0)
                            {
                            <i class="fa fa-vial" data-toggle="tooltip" title="Reservation"></i> @ViewBag.Reserved
                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i> @ViewBag.Issued
                            <i class="fa fa-procedures" data-toggle="tooltip" title="Transfused"></i> @ViewBag.Transfused
                            <i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i> @ViewBag.Returned
                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i> @ViewBag.Reaction
                            }
                        </h5>
                    </div>
                    <div id="collapse2" class="panel-collapse collapse">
                        <div class="panel-body w3-light-gray">
                            @if (ViewBag.Rccount > 0)
                            {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Request Time & Date</th>
                                        <th>Type</th>
                                        <th>Pack ID</th>
                                        <th>History</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    if (item.PRODNUM != null && item.PRODCODE.Substring(0, 2) == "RC")
                                    {
                                    <tr>
                                        <td>@item.ACCESSNUMBER</td>
                                        <td>@Html.DisplayFor(modelItem => item.REQDATE)</td>
                                        <td>@item.PRODCODE</td>
                                        <td><span data-toggle="tooltip" title="@item.PRODGROUP, Expiry: @item.EXPDATE.Value.ToString("dd/MM/yyyy")">@item.PRODNUM</span></td>
                                        <td>
                                            @if (item.RESERVDATE != null && item.ReservIntDay < 8)
                                            {
                                            <i class="fa fa-file-prescription" data-toggle="tooltip" title="Reservation"></i>
                                            <sup>@item.RESERVDATE.Value.ToString("HH:mm") d:@item.ReservIntDay</sup>
                                            }
                                            @if (item.XMATCHDATE != null && item.XmatchIntDay < 8)
                                            {
                                            <i class="fa fa-vials" data-toggle="tooltip" title="Crossmatch"></i>
                                            <sup>@item.XMATCHDATE.Value.ToString("HH:mm") d:@item.XmatchIntDay</sup>
                                            }
                                            @if (item.ISSUEDATE != null && item.IssueIntDay < 8)
                                            {
                                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i>
                                            <sup>@item.ISSUEDATE.Value.ToString("HH:mm") d:@item.IssueIntDay</sup>
                                            }
                                            @if (item.RETURNDATE != null && item.ReturnIntDay < 8)
                                            {
                                            <i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i>
                                            <sup>@item.RETURNDATE.Value.ToString("HH:mm") d:@item.ReturnIntDay</sup>
                                            }
                                        </td>
                                        <td>
                                            @if (item.TRANSREACTION != null)
                                            {
                                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i>
                                            }
                                        </td>
                                    </tr>
                                    }
                                    }
                                </tbody>
                            </table>
                            }
                        </div>
                    </div>
                </div>
                <!-- Platelets -->
                <div class="w3-panel w3-gray panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion-review" href="#collapse3">Platelets</a>
                            <span class="badge badge-pill badge-primary">@ViewBag.Plcount</span>
                            @if (ViewBag.Plcount > 0)
                            {
                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i> @ViewBag.PlIssued
                            <i class="fa fa-procedures" data-toggle="tooltip" title="Transfused"></i> @ViewBag.PlTransfused
                            <i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i> @ViewBag.PlReturned
                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i> @ViewBag.Reaction
                            }
                        </h5>
                    </div>
                    <div id="collapse3" class="panel-collapse collapse">
                        <div class="panel-body w3-light-gray">
                            @if (ViewBag.Plcount > 0)
                            {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Request Time & Date</th>
                                        <th>Type</th>
                                        <th>Pack ID</th>
                                        <th>History</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    if (item.PRODNUM != null && item.PRODCODE.Substring(0, 2) == "PL")
                                    {
                                    <tr>
                                        <td>@item.ACCESSNUMBER</td>
                                        <td>@Html.DisplayFor(modelItem => item.REQDATE)</td>
                                        <td>@item.PRODCODE</td>
                                        <td><span data-toggle="tooltip" title="@item.PRODGROUP, Expiry: @item.EXPDATE.Value.ToString("dd/MM/yyyy")">@item.PRODNUM</span></td>
                                        <td>
                                            @if (item.RESERVDATE != null && item.ReservIntDay < 8)
                                            {
                                            <i class="fa fa-file-prescription" data-toggle="tooltip" title="Reservation"></i>
                                            <sup>@item.RESERVDATE.Value.ToString("HH:mm") d:@item.ReservIntDay</sup>
                                            }
                                            @if (item.XMATCHDATE != null && item.XmatchIntDay < 8)
                                            {
                                            <i class="fa fa-vials" data-toggle="tooltip" title="Crossmatch"></i>
                                            <sup>@item.XMATCHDATE.Value.ToString("HH:mm") d:@item.XmatchIntDay</sup>
                                            }
                                            @if (item.ISSUEDATE != null && item.IssueIntDay < 8)
                                            {
                                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i>
                                            <sup>@item.ISSUEDATE.Value.ToString("HH:mm") d:@item.IssueIntDay</sup>
                                            }
                                            @if (item.RETURNDATE != null && item.ReturnIntDay < 8)
                                            {
                                            <i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i>
                                            <sup>@item.RETURNDATE.Value.ToString("HH:mm") d:@item.ReturnIntDay</sup>
                                            }
                                        </td>
                                        <td>
                                            @if (item.TRANSREACTION != null)
                                            {
                                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i>
                                            }
                                        </td>
                                    </tr>
                                    }
                                    }
                                </tbody>
                            </table>
                            }
                        </div>
                    </div>
                </div>
                <!-- Plasma products -->
                <div class="w3-panel w3-gray panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion-review" href="#collapse4">Plasma products</a>
                            <span class="badge badge-pill badge-primary">@ViewBag.Fpcount</span>
                            @if (ViewBag.Fpcount > 0)
                            {
                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i> @ViewBag.FpIssued
                            <i class="fa fa-procedures" data-toggle="tooltip" title="Transfused"></i> @ViewBag.FpTransfused
                            <i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i> @ViewBag.FpReturned
                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i> @ViewBag.Reaction
                            }
                        </h5>
                    </div>
                    <div id="collapse4" class="panel-collapse collapse">
                        <div class="panel-body w3-light-gray">
                            @if (ViewBag.Fpcount > 0)
                            {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Request Time & Date</th>
                                        <th>Type</th>
                                        <th>Pack ID</th>
                                        <th>History</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    if (item.PRODNUM != null && (item.PRODCODE.Substring(0, 2) == "FF" || item.PRODCODE.Substring(0, 2) == "CR"))
                                    {
                                    <tr>
                                        <td>@item.ACCESSNUMBER</td>
                                        <td>@Html.DisplayFor(modelItem => item.REQDATE)</td>
                                        <td>@item.PRODCODE</td>
                                        <td><span data-toggle="tooltip" title="@item.PRODGROUP, Expiry: @item.EXPDATE.Value.ToString("dd/MM/yyyy")">@item.PRODNUM</span></td>
                                        <td>
                                            @if (item.RESERVDATE != null && item.ReservIntDay < 8)
                                            {
                                            <i class="fa fa-file-prescription" data-toggle="tooltip" title="Reservation"></i>
                                            <sup>@item.RESERVDATE.Value.ToString("HH:mm") d:@item.ReservIntDay</sup>
                                            }
                                            @if (item.XMATCHDATE != null && item.XmatchIntDay < 8)
                                            {
                                            <i class="fa fa-vials" data-toggle="tooltip" title="Crossmatch"></i>
                                            <sup>@item.XMATCHDATE.Value.ToString("HH:mm") d:@item.XmatchIntDay</sup>
                                            }
                                            @if (item.ISSUEDATE != null && item.IssueIntDay < 8)
                                            {
                                            <i class="fa fa-clipboard-check" data-toggle="tooltip" title="Issued"></i>
                                            <sup>@item.ISSUEDATE.Value.ToString("HH:mm") d:@item.IssueIntDay</sup>
                                            }
                                            @if (item.RETURNDATE != null && item.ReturnIntDay < 8)
                                            {
                                            <<i class="fa fa-tag" data-toggle="tooltip" title="Returned"></i>
                                            <sup>@item.RETURNDATE.Value.ToString("HH:mm") d:@item.ReturnIntDay</sup>
                                            }
                                        </td>
                                        <td>
                                            @if (item.TRANSREACTION != null)
                                            {
                                            <i class="fa fa-allergies" data-toggle="tooltip" title="Transfusion reaction"></i>
                                            }
                                        </td>
                                    </tr>
                                    }
                                    }
                                </tbody>
                            </table>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Enter when products required and procedure type-->

        <div class="w3-panel w3-pale-blue">
            <!--Clinical indication-->
            <div class="card-header" id="headingTwo">
                <button class="btn btn-outline-info " data-toggle="collapse" data-target="#disorderType" aria-expanded="true" aria-controls="disorderType">
                    Relevent diagnoses?
                    <span class="badge badge-primary" id="badge-disorder"></span>
                </button>
                <div id="disorderType" class="collapse">
                    <div class="card-body">
                        <ul class=list-group list-group-flush" id="sct2-selected-disorders" style="list-style: none"></ul>
                    </div>
                    <input type="text" class="form-control" width="100" id="sct2-disorder" aria-label="Autocomplete using search text item" />
                    <div><ul id="sct2-disorder-values" style="list-style: none"></ul></div>
                </div>
            </div>
            <!--When required-->
            <div class="card-header" id="headingOne">
                <button class="btn btn-outline-info " data-toggle="collapse" data-target="#requiredTime" aria-expanded="true" aria-controls="requiredTime">
                    When are the products required?
                    <span class="badge badge-primary" id="badge-required-datetime"></span>
                </button>
            </div>
            <div id="requiredTime" class="collapse">
                <div class="card-group">
                    <div class="card bg-info border-info" id="request-timing">
                        <div class="w3-container w3-hover-text-light-gray w3-padding-2">
                            <div class="radio">
                                <label><input type="radio" name="optUrgency" onchange="updateRequiredDate(10)">Immediate</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optUrgency" onchange="updateRequiredDate(30)">Urgent</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optUrgency" checked onchange="updateRequiredDate(180)">Scheduled</label>
                            </div>
                        </div>
                    </div>
                    <div class="card bg-warning border-warning">
                        <div class="w3-container w3-hover-text-light-gray w3-padding-2">
                            <div class="radio">
                                <label><input type="radio" name="optDay" value="1" onchange="updateRequiredDate(180)">Today</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optDay" value="2" onchange="updateRequiredDate(1440)">Tomorrow</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optDay" value="3" onchange="updateRequiredDate(2880)">Day after</label>
                            </div>
                        </div>
                    </div>
                    <div class="card bg-warning border-warning">
                        <div class="w3-container w3-hover-text-light-gray w3-padding-2">
                            <div class="radio">
                                <label><input type="radio" name="optTime" value="1" onchange="updateRequiredTime('08:00')">Morning</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optTime" value="2" onchange="updateRequiredTime('12:00')">Afternoon</label>
                            </div>
                            <div class="radio">
                                <label><input type="radio" name="optTime" value="3" onchange="updateRequiredTime('18:00')">Evening</label>
                            </div>
                        </div>
                    </div>
                    <div class="card bg-light">
                        <div class="w3-container w3-padding-small">
                            @Html.TextBox("Test Date", null, new { id = "RequiredDate", @onchange = "refreshTimeBadge();", @type = "date", @class = "datepicker" })
                            @Html.TextBox("Test Time", null, new { id = "RequiredTime", @onchange = "refreshTimeBadge();", @type = "time", @class = "datepicker" })
                        </div>
                    </div>
                </div>
            </div>
            <!--Procedure-->
            <div class="card-header" id="headingTwo">
                <button class="btn btn-outline-info " data-toggle="collapse" data-target="#procedureType" aria-expanded="true" aria-controls="procedureType">
                    What procedure is the blood required for?
                    <span class="badge badge-primary" id="badge-procedure"></span>
                </button>
                <div id="procedureType" class="collapse">
                    <div class="card-body">
                        <ul class=list-group list-group-flush" id="sct2-selected-values" style="list-style: none"></ul>
                    </div>
                    <input type="text" class="form-control" width="100" id="sct2" aria-label="Autocomplete using search text item" />
                    <div><ul id="sct2-values" style="list-style: none"></ul></div>
                </div>
            </div>
        </div>

        <!--Tabs for selection of requests and products-->
        <div class="w3-container">
            <div class="w3-row">
                <a href="javacript:void(0)" onclick="openRequest(event, 'Test');">
                    <div class="w3-quarter tablink w3-bottombar w3-hover-grey w3-padding">Tests</div>
                </a>
                <a href="javacript:void(0)" onclick="openRequest(event, 'Rbc');">
                    <div class="w3-quarter tablink w3-bottombar w3-hover-grey w3-padding">Red Cells</div>
                </a>
                <a href="javacript:void(0)" onclick="openRequest(event, 'Platelet');">
                    <div class="w3-quarter tablink w3-bottombar w3-hover-grey w3-padding">Platelets</div>
                </a>
                <a href="javacript:void(0)" onclick="openRequest(event, 'Plasma');">
                    <div class="w3-quarter tablink w3-bottombar w3-hover-grey w3-padding">Plasma Products</div>
                </a>
                <!--Test requests-->
                <div id="Test" class="w3-container request" style="display:none">
                    <h6>Choose tests that your patient may require. </h6>
                    <div class="products">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Code</th>
                                    <th></th>
                                    <th>Test Name</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ProductInfo bloodProduct in ViewBag.ProductInfo)
                                {
                                if (bloodProduct.Id.Substring(0, 2).Contains("T-") &&
                                (ViewBag.PtAge >= bloodProduct.Lowerage && ViewBag.PtAge <= bloodProduct.Upperage))
                                {
                                <tr>
                                    <td>
                                        <a href="#0" class="button add-to-cart" data-name='@bloodProduct.Name' data-price=@bloodProduct.Charge data-id=@bloodProduct.Id data-parameter='@bloodProduct.Parameter'>Request</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Id
                                    </td>
                                    <td>
                                        <a href="#0" class="button btn-info" data-toggle="modal" data-target="#product-info" onclick="productInfo('@bloodProduct.Id')">Info</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Name
                                        @if (bloodProduct.Filelocation != "none")
                                        {
                                        <a href="@bloodProduct.Filelocation" target="_blank">
                                            <sup><i class="fa fa-info" data-toggle="tooltip" title="Additional info"></i></sup>
                                        </a>
                                        }
                                    </td>
                                </tr>
                                }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!--Red cell requests-->
                <div id="Rbc" class="w3-container request" style="display:none">
                    <h6>
                        Select suitable products and required quantity. Remember that the minimum number of RBC units should be transfused to
                        achieve the desired response. Refer to <a href="@Url.Action("Guidelines_rbc","ProductInfo")" target="_blank"><b>Guidelines for Red Cell Use</b></a> to aid your transfusion decision.
                    </h6>
                    <p id="alert_redcell" style="color: orangered"></p>
                    <p id="redcell" style="color: orangered"></p>
                    <p id="notice_hb" style="color: red">@ViewBag.cHgb</p>
                    <p id="notice_mcv" style="color: red">@ViewBag.cMcv</p>
                    <div class="products">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Code</th>
                                    <th></th>
                                    <th>Product Name</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ProductInfo bloodProduct in ViewBag.ProductInfo)
                                {
                                if (bloodProduct.Id.Substring(0, 2).Contains("RC") &&
                                (@ViewBag.PtAge >= bloodProduct.Lowerage && ViewBag.PtAge <= bloodProduct.Upperage))
                                {
                                <tr>
                                    <td>
                                        <a href="#0" class="button add-to-cart" data-toggle="modal" data-target="#pick-indication" onclick="updateIndication('@bloodProduct.Parameter')" data-name='@bloodProduct.Name' data-price=@bloodProduct.Charge data-id=@bloodProduct.Id data-parameter='@bloodProduct.Parameter'>Request</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Id
                                    </td>
                                    <td>
                                        <a href="#0" class="button btn-info" data-toggle="modal" data-target="#product-info" onclick="productInfo('@bloodProduct.Id')">Info</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Name
                                        @if (bloodProduct.Filelocation != "none")
                                        {
                                        <a href="@Url.Action("Index","ProductInfo",new {id=bloodProduct.Id })" target="_blank">
                                            <sup><i class="fa fa-info" data-toggle="tooltip" title="Additional info"></i></sup>
                                        </a>
                                        }
                                        @if (bloodProduct.Irradiate == 1)
                                        {
                                        <a href="@Url.Action("Modifications","ProductInfo",new {id="IRR" })" target="_blank">
                                            <sup><i class="fa fa-radiation" data-toggle="tooltip" title="Irradiation possible"></i></sup>
                                        </a>
                                        }
                                        @if (bloodProduct.Leucodeplete == 1)
                                        {
                                        <a href="@Url.Action("Modifications","ProductInfo",new {id="LD" })" target="_blank">
                                            <sup><i class="fa fa-filter" data-toggle="tooltip" title="Leucoreduced"></i></sup>
                                        </a>
                                        }
                                    </td>
                                </tr>
                                }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!--End of Red cell requests-->
                <!--Platelet requests-->
                <div id="Platelet" class="w3-container request" style="display:none">
                    <h6>
                        Select suitable products and required quantity. Refer to <a href="@Url.Action("Guidelines_plt","ProductInfo")" target="_blank"><b>Guidelines for Platelet Use</b></a> to aid your transfusion decision.
                    </h6>
                    <p id="alert_platelet" style="color: orangered"></p>
                    <p id="platelet" style="color: orangered"></p>
                    <p id="notice_platelet" style="color: red">@ViewBag.cPlt</p>
                    <div class="products">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Code</th>
                                    <th></th>
                                    <th>Product Name</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ProductInfo bloodProduct in ViewBag.ProductInfo)
                                {
                                if (bloodProduct.Id.Substring(0, 2).Contains("PL") &&
                                (@ViewBag.PtAge >= bloodProduct.Lowerage && @ViewBag.PtAge <= bloodProduct.Upperage))
                                {
                                <tr>
                                    <td>
                                        <a href="#0" class="button add-to-cart" data-toggle="modal" data-target="#pick-indication" onclick="updateIndication('@bloodProduct.Parameter')" data-name='@bloodProduct.Name' data-price=@bloodProduct.Charge data-id=@bloodProduct.Id data-parameter='@bloodProduct.Parameter'>Request</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Id
                                    </td>
                                    <td>
                                        <a href="#0" class="button btn-info" data-toggle="modal" data-target="#product-info" onclick="productInfo('@bloodProduct.Id')">Info</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Name
                                        @if (bloodProduct.Filelocation != "none")
                                        {
                                        <a href="@Url.Action("Index","ProductInfo",new {id=bloodProduct.Id })" target="_blank">
                                            <sup><i class="fa fa-info" data-toggle="tooltip" title="Additional info"></i></sup>
                                        </a>
                                        }
                                        @if (bloodProduct.Irradiate == 1)
                                        {
                                        <a href="@Url.Action("Modifications","ProductInfo",new {id="IRR" })" target="_blank">
                                            <sup><i class="fa fa-radiation" data-toggle="tooltip" title="Irradiation possible"></i></sup>
                                        </a>
                                        }
                                        @if (bloodProduct.Leucodeplete == 1)
                                        {
                                        <a href="@Url.Action("Modifications","ProductInfo",new {id="LD" })" target="_blank">
                                            <sup><i class="fa fa-filter" data-toggle="tooltip" title="Leucoreduced"></i></sup>
                                        </a>
                                        }
                                    </td>
                                </tr>
                                }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!--Plasma products and derivatives requests-->
                <div id="Plasma" class="w3-container request" style="display:none">
                    <h6>
                        Select suitable products and required quantity. Refer to <a href="@Url.Action("Guidelines_ffp","ProductInfo")"><b>Guidelines for FFP Transfusions</b></a> to aid your transfusion decision.
                    </h6>
                    <p id="alert_ffp" style="color: orangered"></p>
                    <p id="alert_cryoprecipitate" style="color: orangered"></p>
                    <p id="ffp" style="color: orangered"></p>
                    <p id="cryoprecipitate" style="color: orangered"></p>
                    <p id="notice_ffp" style="color: red">@ViewBag.cInr</p>
                    <div class="products">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Code</th>
                                    <th></th>
                                    <th>Product Name</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ProductInfo bloodProduct in ViewBag.ProductInfo)
                                {
                                if (bloodProduct.Id.Substring(0, 2).Contains("PP") &&
                                (@ViewBag.PtAge >= bloodProduct.Lowerage && ViewBag.PtAge <= bloodProduct.Upperage))
                                {
                                <tr>
                                    <td>
                                        <a href="#0" class="button add-to-cart" data-toggle="modal" data-target="#pick-indication"
                                           onclick="updateIndication('@bloodProduct.Parameter')" data-name='@bloodProduct.Name' data-price=@bloodProduct.Charge data-id=@bloodProduct.Id data-parameter='@bloodProduct.Parameter'>Request</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Id
                                    </td>
                                    <td>
                                        <a href="#0" class="button btn-info" data-toggle="modal" data-target="#product-info" onclick="productInfo('@bloodProduct.Id')">Info</a>
                                    </td>
                                    <td>
                                        @bloodProduct.Name
                                        @if (bloodProduct.Filelocation != "none")
                                        {
                                        <a href="@Url.Action("Index","ProductInfo",new {id=bloodProduct.Id })" target="_blank">
                                            <sup><i class="fa fa-info" data-toggle="tooltip" title="Additional info"></i></sup>
                                        </a>
                                        }
                                    </td>
                                </tr>
                                }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!--Modal form - Request-->
        <div class="modal fade" id="cart" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Requests</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table id="tblConfirmRequest" class="table table-striped table-responsive text-wrap w-auto">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th style="display:none">Parameter</th>
                                    <th>Description</th>
                                    <th>Charge (RM)</th>
                                    <th></th>
                                    <th>Units</th>
                                    <th></th>
                                    <th>Total (RM)</th>
                                </tr>
                            </thead>
                            <tbody class="show-cart" id="show-cart">
                                <!--Inject rows from displayCart js-->
                            </tbody>
                        </table>
                        <h6>Estimated total charge: RM<span class="total-cart"></span></h6>
                        <!--Display all alerts-->
                        <div>
                            <ul class="list-group list-group-flush list-group-item-danger" id="modal-alert" style="list-style:none"></ul>
                        </div>
                    </div>
                    <!--
                     <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button onclick="confirmRequest()" type="button" class="btn btn-primary" id="confirm-request">Confirm request</button>
                    </div>
                    -->
                    <hr />
                    <div>
                        <ul class="list-group list-group-flush list-group-item-danger" id="warning-confirm-request" style="list-style:none"></ul>
                    </div>
                    <div id="upload-request">
                        <!--Insert btCartNew only when request is cleared-->
                    </div>
                    <!--div>
                        <input class="btn-default" type="button" id="btnCartNew" value="Save" />
                        <input class="btn-default" type="button" id="btnAddItems" value="Save" />
                    <div-->
                </div>
            </div>
        </div>

        <!--Modal form - Review Request-->
        <div class="modal fade" id="review-request" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">

            </div>
        </div>

        <!--Modal form - Indication-->
        <div class="modal fade" id="pick-indication" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="pick-indication-label">Clinical indication</h4>
                        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        <h6>Select the most important indication for this transfusion</h6>
                        <table class="table table-striped" id="list-indication-product">
                            <tbody>
                                <!--Insert table using updateIndication js function-->
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="productIndication('redcell')">Save changes</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Modal form - Product Info-->
        <div class="modal fade" id="product-info" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="list-info-product-header">Product Code</h4>
                        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        <div id="list-info-product">
                            <!--Inject product information by productInfo js-->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--Modal form - Select Procedure-->
        <div class="modal fade" id="select-procedure" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="select-procedure-header">Procedure List (ICD10-PCS)</h4>
                        <button type="button" class="close float-right" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    </div>
                    <div class="modal-body">
                        <label for="icd10-level3">Select procedure:</label>
                        <select name="icd10-level3" class="custom-select" id="icd10-level3"></select>
                        <label for="icd10-level4">Select procedure:</label>
                        <select name="icd10-level4" class=" custom-select" id="icd10-level4"></select>
                    </div>
                </div>
            </div>
        </div>

        <!--Modal form - Review requests and sample taking-->
        <div class="modal fade" id="review-requests" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Review and submit request</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="requests-card">
                        <!--Insert cards using js-->
                        <div id="demo" class="carousel slide" data-ride="carousel" data-interval="15000">
                            <!-- Indicators>
                            <ol-- class="carousel-indicators" id="requests-carousel-indicator">
                                <li data-target="#demo" data-slide-to="0" class="active">1</li>
                                <li data-target="#demo" data-slide-to="1">2</li>
                            </ol-->
                            <div class="carousel-inner">
                                <div id="requests-carousel-inner">
                                    <!--Insert carousel contents by js-->
                                </div>
                                <!-- Left and right controls -->
                                <a class="carousel-control-prev" href="#demo" data-slide="prev">
                                    <span class="carousel-control-prev-icon"></span>
                                </a>
                                <a class="carousel-control-next" href="#demo" data-slide="next">
                                    <span class="carousel-control-next-icon"></span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div id="sample-barcode" hidden>
                            <svg id="barcode"></svg>
                        </div>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!--Modal form - Transfusion process-->
        <div class="modal fade" id="transfusion-monitor" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Transfusion monitoring</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="card bg-info mb-4">
                            <div class="card-header" id="card-verify-pack">Verify Pack</div>
                            <div class="card-body pb-3">
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" id="transfuse-recipient-id" placeholder="Scan recipient's ID" aria-label="Scan recipient's ID" aria-describedby="basic-addon2">
                                </div>
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" id="transfuse-pack-id" placeholder="Scan blood pack's ID" aria-label="Scan blood pack's ID" aria-describedby="basic-addon2">
                                </div>
                                <button type="button" onclick="verifyPack()" class="btn btn-outline-dark" id="submit-transfuse-pack">Submit</button>
                            </div>
                        </div>
                        <div id="testing-json"></div>
                        <!--Pre-transfusion observations-->
                        <div class="card bg-light mb4" id="card-transfusion-pre">
                            <h6 class="card-header">Pre-transfusion observation</h6>
                            <div class="card-body">
                                <!--Temperature-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-temperature-high" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="pre-temp" class="form-control-sm" data-suffix="°C" value="374" min="350" max="450" step="2" />
                                        </div>
                                    </div>
                                </div>
                                <!--Pulse rate-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-heartbeat" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="pre-pulse" class="form-control-sm" data-suffix="bpm" value="72" min="40" max="160" step="1" />
                                        </div>
                                    </div>
                                </div>
                                <!--Systolic blood pressure-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-ruler-vertical" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="pre-bp-sys" class="form-control-sm" data-suffix="mmHg" value="120" min="0" max="220" step="10" />
                                        </div>
                                    </div>
                                </div>
                                <!--Diastolic blood pressure-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold text-danger indigo-text"><i class="fas fa-ruler-vertical" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="pre-bp-dia" class="form-control-sm" data-suffix="mmHg" value="80" min="0" max="180" step="10" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="button" id="btn-start-transfusion" onclick="startTransfusion()" class="btn btn-secondary btn-lg btn-block">Start Transfusion</button>
                            </div>
                        </div>
                        <!--Transfusion progress-->
                        <div class="card bg-light mb4" id="card-transfusion-progress">
                            <h6 class="card-header">Transfusion progress</h6>
                            <div class="alert alert-info" role="alert" id="text-transfusion-progress"></div>
                            <div class="card-body">
                                <button type="button" id="btn-interupt-transfusion" onclick="interuptTransfusion()" class="btn btn-primary btn-block">Interrupt Transfusion</button>
                                <hr />
                                <div id="interupt-transfusion">
                                    <form id="interuptReasons">
                                        <div class="form-group">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="interuptReason" id="interuptReason1" value=1 checked>
                                                <label class="form-check-label" for="interuptReason1">Line blocked</label>
                                            </div>
                                            <div class="form-check ">
                                                <input class="form-check-input" type="radio" name="interuptReason" id="interuptReason2" value=2>
                                                <label class="form-check-label" for="interuptReason2">Febrile reaction</label>
                                            </div>
                                            <div class="form-check ">
                                                <input class="form-check-input" type="radio" name="interuptReason" id="interuptReason3" value=3>
                                                <label class="form-check-label" for="interuptReason3">Mild urticurial reaction</label>
                                            </div>
                                            <div class="form-check ">
                                                <input class="form-check-input" type="radio" name="interuptReason" id="interuptReason4" value=4>
                                                <label class="form-check-label" for="interuptReason4">Other reactions requiring TRI</label>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="form-group" id="interupt-decision-group">
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="interuptDecision" id="interuptCheckbox1" value=1 checked>
                                        <label class="form-check-label" for="interuptCheckbox1">Recommence transfusion</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="interuptDecision" id="interuptCheckbox2" value=2>
                                        <label class="form-check-label" for="interuptCheckbox2">Terminate transfusion</label>
                                    </div>
                                    <!--Add option to either recommence or terminate transfusion-->
                                    <button type="button" id="btn-recommence-transfusion" onclick="recommenceTransfusion()" class="btn btn-primary">Confirm decision</button>
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="button" id="btn-stop-transfusion" onclick="stopTransfusion()" class="btn btn-danger btn-lg btn-block">End Transfusion</button>
                            </div>
                        </div>
                        <!--Post-transfusion observations-->
                        <div class="card mb-4" id="card-transfusion-summary">
                            <div class="card-body">
                                <h6 class="card-text" id="text-transfusion-summary"></h6>
                            </div>
                        </div>
                        <div class="card bg-light mb4" id="card-transfusion-post">
                            <h6 class="card-header">Post-transfusion observation</h6>
                            <div class="card-body">
                                <!--Temperature-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-temperature-high" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="post-temp" class="form-control-sm" data-suffix="°C" value="374" min="350" max="450" step="2" />
                                        </div>
                                    </div>
                                </div>
                                <!--Pulse rate-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-heartbeat" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="post-pulse" class="form-control-sm" data-suffix="bpm" value="72" min="40" max="160" step="1" />
                                        </div>
                                    </div>
                                </div>
                                <!--Systolic blood pressure-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold indigo-text"><i class="fas fa-ruler-vertical" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="post-bp-sys" class="form-control-sm" data-suffix="mmHg" value="120" min="0" max="220" step="10" />
                                        </div>
                                    </div>
                                </div>
                                <!--Diastolic blood pressure-->
                                <div class="d-flex justify-content-md-center pb-3">
                                    <div class="input-group">
                                        <div class="col-md-2">
                                            <span class="font-weight-bold text-danger indigo-text"><i class="fas fa-ruler-vertical" aria-hidden="true"></i></span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" id="post-bp-dia" class="form-control-sm" data-suffix="mmHg" value="80" min="0" max="180" step="10" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                <button type="button" id="btn-complete-transfusion" onclick="completeTransfusion()" class="btn btn-warning btn-lg btn-block">Complete Transfusion</button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!--Terminating messages and alerts-->
        <br>
        <div class="w3-container w3-dark-grey w3-padding-32">
            <div class="w3-row">
                <div class="w3-container w3-third">
                    <h5 class="w3-bottombar w3-border-green">Messages & Alerts</h5>
                </div>
                <div class="w3-container w3-third">
                    <h5 class="w3-bottombar w3-border-red">Blood Stock Levels</h5>
                </div>
                <div class="w3-container w3-third">
                    <h5 class="w3-bottombar w3-border-orange">Guidelines</h5>
                </div>
            </div>
        </div>
        <!-- Footer -->
        <footer class="w3-container w3-padding-16 w3-light-grey">
            <h4>USE BLOOD WISELY</h4>
        </footer>
        <!-- End page content -->
    </div>
    <script>
        // Get the Sidebar
        var mySidebar = document.getElementById("mySidebar");

        // Get the DIV with overlay effect
        var overlayBg = document.getElementById("myOverlay");

        // Toggle between showing and hiding the sidebar, and add overlay effect
        function w3_open() {
            if (mySidebar.style.display === 'block') {
                mySidebar.style.display = 'none';
                overlayBg.style.display = "none";
            } else {
                mySidebar.style.display = 'block';
                overlayBg.style.display = "block";
            }
        }

        // Close the sidebar with the close button
        function w3_close() {
            mySidebar.style.display = "none";
            overlayBg.style.display = "none";
        }
    </script>
    <script>
        //Open and close request tabs
        function openRequest(evt, requestName) {
            var i, x, tablinks;
            x = document.getElementsByClassName("request");
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablink");
            for (i = 0; i < x.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" w3-border-red", "");
            }
            document.getElementById(requestName).style.display = "block";
            evt.currentTarget.firstElementChild.className += " w3-border-red";
        }
    </script>
    <script>
        function displayRadioValue(radioname) {
            var ele = document.getElementsByName(radioname);

            for (i = 0; i < ele.length; i++) {
                if (ele[i].checked)
                    return ele[i].value;
            }
        } 
    </script>

    <script>
        //Input type spinner if input is number
        $("input[type='number']").inputSpinner();
    </script>
    <script>
        //Update badge with required date and time
        function refreshTimeBadge() {
            var d = document.getElementById("RequiredDate").value;
            var t = document.getElementById("RequiredTime").value;
            document.getElementById("badge-required-datetime").innerHTML = d + " " + t;
        }
    </script>
    <script>
        //Update RequiredTime according to optTime
        function updateRequiredTime(val) {
            document.getElementById("RequiredTime").value = val;
            refreshTimeBadge();
        }
    </script>
    <script>
        function convertUnix(val) {
            var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            var date = new Date(val);
            var year = date.getFullYear();
            var month = months_arr[date.getMonth()];
            var day = date.getDate();
            var hours = date.getHours();
            var minutes = "0" + date.getMinutes();
            var seconds = "0" + date.getSeconds();
            // Display date time in MM-dd-yyyy h:m:s format
            var convdataTime = month + '-' + day + '-' + year + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);

            return convdataTime;
        }
    </script>
    <script>
        //Update RequiredDate according to optDay
        function updateRequiredDate(val) {
            var currentd = new Date();
            var d = new Date(currentd);
            d.setMinutes(d.getMinutes() + val);

            var dd = d.getDate();
            var mm = d.getMonth();
            var hh = d.getHours();
            var mn = d.getMinutes();

            var day;
            var month;
            var hour;
            var minute;
            var year;


            if (dd < 10) {
                day = '0' + dd;
            }
            else {
                day = dd;
            }
            if (mm + 1 < 10) {
                month = '0' + (mm + 1);
            }
            else {
                month = mm + 1;
            }
            if (hh < 10) {
                hour = '0' + hh;
            }
            else {
                hour = hh;
            }
            if (mn < 10) {
                minute = '0' + mn;
            }
            else {
                minute = mn;
            }

            year = d.getFullYear();

            var date = year + "-" + month + "-" + day;
            var time = hour + ":" + minute;
            document.getElementById("RequiredDate").value = date;
            document.getElementById("RequiredTime").value = time;
            refreshTimeBadge();
        }
    </script>

    <!--Scripts for updating procedures/disorders-->
    <script>
        //Autofill procedure list using AJAX
        var textbox;
        //var selectValue;
        //var selectedValue;

        $(function () {
            textboxp = $("#sct2");
            textboxd = $("#sct2-disorder")

            //selectValuep = $('ul#sct2-values');
            //selectValued = $('ul#sct2-disorder-values');

            textboxp.on("input", function () {
                //Autocomplete only if a specific number of characters have been entered
                if (textboxp.val().length > 2) {
                    getAutoComplete(textboxp.val(), 'p');
                }
                else {
                    getAutoComplete('###', 'p');
                }
            });
            textboxd.on("input", function () {
                //Autocomplete only if a specific number of characters have been entered
                if (textboxd.val().length > 2) {
                    getAutoComplete(textboxd.val(), 'd');
                }
                else {
                    getAutoComplete('###', 'd');
                }
            });
        });

        function getAutoComplete(sct2value, type) {
            var selectValue;

            if (type == 'p') {
                var uri = "/Patient/GetProcedureSct2";
                selectValue = $('ul#sct2-values');
            }
            else if (type == 'd') {
                var uri = "/Patient/GetDisorderSct2";
                selectValue = $('ul#sct2-disorder-values');
            }

            $.getJSON(uri, { sct2value: sct2value }).done(function (data) {
                selectValue.html("");
                var count = 0;
                $.each(data, function (key, item) {
                    var arr = item.split("|")
                    var li = $('<li/>').addClass('ui-menu-item').attr('role', 'menu-item')
                        .html("<a href='#/' onclick=\"setText('" + arr[0] + " | " + arr[1] + "','" + type + "')\">" + arr[1] + "</a>")
                        .appendTo(selectValue);
                    count++;
                });
            });
        }
        function setText(text, type) {
            var selectedValue;
            if (type == 'p') {
                textboxp.val("");
                textboxp.focus();
                selectedValue = $('ul#sct2-selected-values');
            }
            else if (type == 'd') {
                textboxd.val("");
                textboxd.focus();
                selectedValue = $('ul#sct2-selected-disorders');
            }

            getAutoComplete("", type);

            selectedValue.append("<span><li class='list-group-item'><button class='btn btn-outline-info fa fa-trash'></button>" + "&nbsp" + text + "</li></span>");
            refreshProcedureBadge(type);
        }
    </script>
    <script>
        //Remove selected procedure
        $("ul#sct2-selected-values").on("click", "button", function (e) {
            e.preventDefault();
            $(this).parent().remove();
            refreshProcedureBadge('p');
        });
        $("ul#sct2-selected-disorders").on("click", "button", function (e) {
            e.preventDefault();
            $(this).parent().remove();
            refreshProcedureBadge('d');
        });
    </script>
    <script>
        //Update badge with procedure information
        function refreshProcedureBadge(type) {
            var lis;
            var target;

            if (type == 'p') {
                lis = document.getElementById("sct2-selected-values").getElementsByTagName("li");
                target = document.getElementById("badge-procedure");
            }
            else if (type == 'd') {
                var lis = document.getElementById("sct2-selected-disorders").getElementsByTagName("li");
                var target = document.getElementById("badge-disorder");
            }

            var i = lis.length;

            if (i > 0) {
                var str = lis[0].innerText;
                if (str.length > 60) {
                    str = str.substring(0, 50);
                }
                else {
                    str = str;
                }

                if (i == 1) {
                    target.innerHTML = str;
                }
                else if (i > 1) {
                    target.innerHTML = str + "..+" + (i - 1) + " more";
                }
                else {
                    target.innerHTML = "";
                }
            }
            else {
                target.innerHTML = "";
            }
        }
    </script>
    <!--End of scripts for updating procedures-->
    <script>
        //Update table for indication specific to each product type
        function updateIndication(val) {
            var output = "";
            var threshold = "";
            if (val == 'redcell') {
                threshold = @ViewBag.yHb[ViewBag.UHgb];
            }
            else if (val == 'platelet') {
                threshold = @ViewBag.yPlt[ViewBag.UPlt];
            }
            else if (val == 'ffp') {
                threshold = @ViewBag.yInr[ViewBag.UInr];
            }
            else if (val == 'cryoprecipitate') {
                threshold = @ViewBag.yFbg[ViewBag.UFbg];
            }
            else {
                threshold = 0;
            }
            var jsonObj = @Html.Raw(Json.Encode(ViewBag.Indications));
            for (var i in jsonObj) {
                if (jsonObj[i].Parameter == val) {
                    output += "<tr>"
                        + "<td><input type='radio' id=" + jsonObj[i].Id
                        + " name= '" + jsonObj[i].Parameter + "'"
                        + " value= '" + jsonObj[i].Caption + "'"
                        + " onchange = \"checkIndication(" + jsonObj[i].Level + "," + threshold + ",\'" + val + "\', '" + jsonObj[i].Caption +  "\')\">" + "</td >"
                        + "<td>" + jsonObj[i].Caption + "</td>"
                        + "</tr>";
                }
                else {
                    output += ""
                }
            }
            document.getElementById('list-indication-product').innerHTML = output;
            //Update field to state that a indication for the red cell transfusion has not been stated yet
            var indication = "Indication for <b>" + val + "</b> transfusion has not been provided yet"
            document.getElementById(val).innerHTML = indication;

            //Store indication for product as a session storage item and update to modal request form
            sessionStorage.setItem("indication_" + val, indication);
            displayIndication();
        }
    </script>

    <script>
        //Display short product or test info
        function productInfo(val) {
            var output = "";
            var header = "";
            var jsonObj = @Html.Raw(Json.Encode(ViewBag.ProductInfo));
            for (var i in jsonObj) {
                if (jsonObj[i].Id == val) {
                    if (jsonObj[i].Id.startsWith("T")) {
                        output += ""
                            + "<p>" + jsonObj[i].Comments + "</p>"
                            ;
                    }
                    else {
                        output += ""
                            + "<p><b>Contents:</b> " + jsonObj[i].Content + "</p>"
                            + "<p><b>Volume:</b> " + jsonObj[i].Volume + "</p>"
                            + "<p><b>Recommended dosage:</b> " + jsonObj[i].Dosage + "</p>"
                            + "<p><b>Additional requirements:</b> " + jsonObj[i].Comments + "</p>"
                            ;
                    }
                    header += ""
                        + jsonObj[i].Id
                        + " (" + jsonObj[i].Name + ")";
                }
                else {
                    output += "";
                    header += "";
                }
            }
            document.getElementById('list-info-product').innerHTML = output;
            document.getElementById('list-info-product-header').innerHTML = header;
        }
    </script>
    <script>
        //Validate radio-button for product indications
        function checkIndication(a, b, c, d) {
            var radios = document.getElementsByName(c);
            var fback;
            for (var i = 0; i < radios.length; i++) {
                if (c == 'redcell') {
                    if (b == 0) {
                        fback = "Red cell request has been made with no prior Hb results."
                    }
                    else if (b > 1.1 * a) {
                        fback = "You have chosen to transfuse at a target Hb of " + a + " but the patient's last Hb was " + b + " g/L."
                    }
                    else {
                        fback = ""
                    };
                }
                else if (c == 'platelet') {
                    if (b == 0) {
                        fback = "Platelet request has been made with no prior platelet count results."
                    }
                    else if (b > 1.1 * a) {
                        fback = "You have chosen to transfuse at a target platelet count of " + a + " but the patient's last count was " + b + " g/L."
                    }
                    else {
                        fback = ""
                    };
                }
                else if (c == 'ffp') {
                    if (b == 0) {
                        fback = "FFP request has been made with no prior INR results."
                    }
                    else if (b < 0.9 * a) {
                        fback = "You have chosen to transfuse at a target INR of " + a + " but the patient's last INR was " + b + "."
                    }
                    else {
                        fback = ""
                    };
                }
                else if (c == 'cryoprecipitate') {
                    if (b == 0) {
                        fback = "Cryoprecipitate request has been made with no prior fibrinogen results."
                    }
                    else if (b > 1.1 * a) {
                        fback = "You have chosen to transfuse at a target fibrinogen of " + a + " but the patient's last fibrinogen was " + b + ", " + @ViewBag.FbgInterval + " days ago."
                    }
                    else {
                        fback = ""
                    };
                }
                else {
                    fback = "";
                }
            }
            //Update indication and alerts for product on the request modal form
            //alert
            if (fback != "") {
                document.getElementById("alert_" + c + "").innerHTML = fback;
                sessionStorage.setItem("alert_" + c + "", fback);
            }
            //indication
            document.getElementById(c).innerHTML = "Indication (" + c + "): " + d;
            sessionStorage.setItem("indication_" + c, "Indication (" + c + "): " + d);

            displayIndication();
        }
    </script>
    <script>
        //Run confirm request each time request modal form is shown
        $(document).ready(function () {
            $('#cart').on('show.bs.modal', function (e) {
                confirmRequest();
            });
        })
    </script>
    <script>
        //Request validation on clicking Confirm Request in modal-request
        function confirmRequest() {
            var table = document.getElementById("tblConfirmRequest");
            var p;
            var indication;
            var nontest = 0; //counter for all products requested
            var count = 0; //counter for products where indication is not state
            var proc = 0; //counter for indications having a procedure
            var gs = 0; //counter for products that may require a GS
            var abd = 0; //counter for instances where only an ABD is required
            var warn = "";
            for (var i = 0, row; row = table.rows[i]; i++) {
                for (var j = 0, col; col = row.cells[j]; j++) {
                    if (j == 1) {
                        p = col.innerText;
                        //check if indication has been provided for the product. If none increment count
                        if (p != "test") {
                            nontest = nontest + 1;
                            let param = sessionStorage.getItem('indication_' + p + '');
                            indication = "Indication for <b>" + p + "</b> transfusion has not been provided yet"
                            if (param == indication) { count = count + 1; }
                            //if (param.includes('procedure')) { proc = proc + 1; }
                            //Check for any red cell request which may require a GS
                            if (p == 'redcell') {
                                if (@ViewBag.diffSample > 120) { gs = gs + 1; }
                                else {
                                    if (@ViewBag.lastTransfusion < 28 && @ViewBag.diffSample > 48) { gs = gs + 1; }
                                    else { if (@ViewBag.Abonum == 1) { gs = gs + 1; } }
                                }
                            }
                            else if (p == 'platelet' || p == 'ffp' || p == 'cryoprecipitate' || p == 'cryosupernatant') {
                                if (@ViewBag.Abonum == 0) { gs = gs + 1; }
                                else if (@ViewBag.Abonum == 1) { abd = abd + 1; }
                            }
                        }
                    }
                }
            }

            var alerts = $('#warning-confirm-request');
            document.getElementById('warning-confirm-request').innerHTML = "";
            //Alert if indication not provided for any of the products
            if (count != 0) {
                warn = 'Please provide appropriate indication for each of the product requested.'
                alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
            }

            //check for diagnosis
            if (document.getElementById('badge-disorder').innerText == "") {
                warn = 'Relevent clinical diagnosis must be provided.'
                alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
            }

            //check for time required
            if (nontest != 0) {
                if (document.getElementById('badge-required-datetime').innerText == "") {
                    warn = 'Please state when the product is required.'
                    alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
                }
            }

            //check for procedure if the product request is for pre-procedure
            /*
            if (document.getElementById('sct2-selected-values').html == "" && proc != 0) {
                warn = 'Please state the procedure for which this product is required.'
                alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
            }
            */


            if (document.getElementById('badge-procedure').innerText == "?") {
                warn = 'Please state the procedure for which this product is required.'
                alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
            }


            //Add GS if any red cells ordered or plasma products ordered without any previous ABD.
            if (gs != 0) {
                var i = 0;
                for (var item in cart) {
                    if (cart[item].id == "T-GSH") { i = i + 1; }
                    else if (cart[item].id == "T-ABD") { shoppingCart.removeItemFromCartAll("T-ABD"); }
                }
                if (i == 0) {
                    shoppingCart.addItemToCart("T-GSH", "Group Screen Hold", 40.00, "test", 1);
                    displayCart(0);
                }
            }

            //Add ABD if any plasma products ordered with only a single ABD determination.
            if (abd != 0) {
                var i = 0;
                for (var item in cart) {
                    if (cart[item].id == "T-GSH" || cart[item].id == "T-ABD") { i = i + 1; }
                }
                if (i == 0) {
                    shoppingCart.addItemToCart("T-ABD", "ABO and RhD typing", 27.00, "test", 1);
                    displayCart(0);
                }
            }

            //confirm request if no alerts
            if (document.getElementById('warning-confirm-request').innerHTML == "" && !(document.getElementById('show-cart').innerHTML == "")) {
                //warn = "Request cleared";
                //alerts.append("<li class='list-group-item list-group-item-warning'>" + warn + "</li></span>");
                var txt = "<button type='button' onclick='updateCarts()' class='btn btn-primary btn-lg btn-block'>Upload request</button>";
                document.getElementById('upload-request').innerHTML = txt;
            }
            else {
                var txt = "";
                document.getElementById('upload-request').innerHTML = txt;
            }
        }
    </script>
    <script>
        function updateCarts() {
            var carts = new Array();
            var cart = {};
            var currentdate = new Date();
            var UniqueCartID = Date.now();
            var items = "";

            //Populate Cart info
            cart.CartID = UniqueCartID;
            cart.UserId = 1;
            cart.DateCreated = currentdate.getFullYear() + "-"
                + (currentdate.getMonth() + 1) + "-"
                + currentdate.getDate() + " "
                + currentdate.getHours() + ":"
                + currentdate.getMinutes();
            cart.CheckedOut = 0;
            cart.Urgency = 1;
            cart.Location = document.getElementById("unique-patient-location").innerHTML;
            cart.PatientID = document.getElementById("unique-patient-id").innerHTML;
            cart.PatientName = document.getElementById("unique-patient-name").innerHTML;
            cart.Status = 0;


            $("#tblConfirmRequest tbody tr").each(function () {
                var row = $(this);
                items = items
                        + row.find("TD").eq(2).html() + " ("
                        + row.find("TD").eq(0).html() + ") - "
                        + row.find("TD").eq(5).html() + ";";
            });
            cart.Items = items;
            carts.push(cart);

            //Send the JSON array to InsertCart Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Patient/InsertCarts",
                data: JSON.stringify(carts),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    //alert(r + " record(s) inserted.");
                    if (r > 0) {
                        //Update cart items if cart has been succesfully added
                        updateCartItems(UniqueCartID)
                    }
                }
            });
        }
    </script>
    <script>
        //Insert Cart Items
        function updateCartItems(id) {
            var cartItems = new Array();
            var str = "";
            $("#tblConfirmRequest tbody tr").each(function () {
                var row = $(this);
                var cartItem = {};
                cartItem.CartID = id;
                cartItem.ProductID = row.find("TD").eq(0).html();
                cartItem.Price = row.find("TD").eq(3).html();
                cartItem.Quantity = row.find("TD").eq(5).html();
                cartItems.push(cartItem);
            });

            //Send the JSON array to InsertCartItems Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Patient/InsertCartItems",
                data: JSON.stringify(cartItems),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    //alert(r + " record(s) inserted.");
                    if (r > 0) {
                        //Update Notices if cart items have been succesfully added
                        UpdateNotices(id)
                    }
                }
            });
        }
    </script>
    <script>
        //Insert Indications, Alerts, Diagnosis, Procedure codes and Notices
        function UpdateNotices(id) {
            var noticeItems = new Array();
            var listItems = $("#modal-alert li");
            for (let li of listItems) {
                var noticeItem = {};
                let noticeText = $(li).text();
                noticeItem.CartID = id;
                noticeItem.CategoryID = 5;
                noticeItem.NoticeText = noticeText;
                noticeItems.push(noticeItem);
            }

            //Add diagnosis to JSON array
            var listDisorders = $("#sct2-selected-disorders li");
            for (let li of listDisorders) {
                var noticeItem = {};
                let noticeText = $(li).text();
                noticeItem.CartID = id;
                noticeItem.CategoryID = 2;
                noticeItem.NoticeText = noticeText;
                noticeItems.push(noticeItem);
            }

            //Add procedures to JSON array
            var listProcedures = $("#sct2-selected-values li");
            for (let li of listProcedures) {
                var noticeItem = {};
                let noticeText = $(li).text();
                noticeItem.CartID = id;
                noticeItem.CategoryID = 3;
                noticeItem.NoticeText = noticeText;
                noticeItems.push(noticeItem);
            }

            //Add notices to JSON array
            var array_notice = ["#notice_hb", "#notice_mcv", "#notice_platelet", "#notice_ffp"];
            for (var i = 0; i < array_notice.length; i++) {
                var noticeItem = {};
                let noticeText = $(array_notice[i]).text();
                noticeItem.CartID = id;
                noticeItem.CategoryID = 4;
                noticeItem.NoticeText = noticeText;
                noticeItems.push(noticeItem);
            }

            //Send the JSON array to InsertNotices Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Patient/InsertNotices",
                data: JSON.stringify(noticeItems),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");

                    //Clear sessionStorage  and close modal
                    $("#cart").modal("hide");
                    sessionStorage.clear();

                    //Reload page to clear all entries and update number of non submitted request
                    location.reload(true);
                }
            });
        }
    </script>
    <script>
        //Update notification badge with number of unchecked requests
        $(document).ready(function () {
            var id = document.getElementById("unique-patient-id").innerHTML;
            var selectValue = document.getElementById("cart-unchecked");
            var uri = "/Patient/GetCartItems";

            $.getJSON(uri, { id: id }).done(function (data) {
                var count;
                //count = Object.keys(data).length;
                count = JSON.parse(data).length;
                selectValue.innerHTML = count;
                updateModalReviewRequests(data);

            });
        });

        function updateModalReviewRequests(data) {
            var objResults, x = "";
            objResults = JSON.parse(data);

            for (var i = 0; i < objResults.length; i++) {
                var d, progress, fasyringe = "", listItems = "", carouselHead = "", footer = "";

                //Calculate proportion for interval for request validity
                d = (objResults[i].Interval / 72) * 100
                if (d <= 100) {
                    d = d;
                }
                else {
                    d = 100;
                }

                //Determine kind of progress bar to display
                if (d <= 33) {
                    progress = "info"
                }
                else if (d >= 66) {
                    progress = "danger"
                }
                else {
                    progress = "warning"
                }

                //Customise fa according to sample status
                if (objResults[i].Items.includes("T-")) {
                    if (objResults[i].CheckedIn == 0) {
                        if (objResults[i].CheckedOut == 0) {
                            fasyringe = "<span id = 'sample-status-" + objResults[i].CartID + "' onclick = 'toggleSubmitReq(" + objResults[i].CartID + ")'><i class='fas fa-syringe fa-lg text-danger pr-4'></i></span>"
                        }
                        else if (objResults[i].CheckedOut == 1) {
                            fasyringe = "<span id = 'sample-status-" + objResults[i].CartID + "' onclick = ''><i class='fas fa-vials fa-lg text-danger pr-4'></i></span>"
                        }
                        else {
                            fasyringe = "";
                        }
                    }
                    else {
                        fasyringe = "";
                    }
                }

                //Specify header for carousel item and footer
                if (i == 0) {
                    carouselHead = " <div class='carousel-item active'> "
                    footer = "Latest of " + objResults.length + " non-submitted requests"
                }
                else {
                    carouselHead = "<div class='carousel-item'>"
                    footer = (i + 1) + " of " + objResults.length + " non-submitted requests"
                }

                //Convert Item string into aray and make a list
                var arrItem = objResults[i].Items.split(";");
                for (var j = 0; j < arrItem.length; j++) {
                    listItems += "<li class='list-group-item'>" + arrItem[j] + "</li>"
                }

                x += carouselHead + "<div class='card bg-light' >"
                    + "<div class='card-body pb-3' >"
                    + "<div class='card-header'>"
                    + "<i class='fa fa-heart float-right text-danger' data-placement='top'></i>"
                    + "<h4 class='card-title font-weight-bold'>" + objResults[i].CartID + "</h4>"
                    + "<p class='card-subtitle mb-2 text-muted'>" + objResults[i].DateCreated + "</p>"
                    + "</div>"
                    + "<div class='d-flex justify-content-between'>"
                    + "<ul class='list-group list-group-flush'>" + listItems + "</ul>"
                    + "</div><hr class=''>"
                    + "<div class='progress md-progress'>"
                    + "<div class='progress-bar progress-bar-" + progress + "' role='progressbar' style='width: " + d + "%' aria-valuenow='" + d + "' aria-valuemin='0' aria-valuemax='100'></div>"
                    + "</div>"
                    + "<ul class='list-unstyled d-flex justify-content-between font-small text-muted mb-4'>"
                    + "<li class='pl-3'>0</li><li>24</li><li>48</li><li class='pr-3'>72</li></ul>"
                    + "<div id='request-" + objResults[i].CartID + "' style='display:none'>"
                    + "<div class='input-group mb-3'>"
                    + "<input type='text' value = '' id='patient-" + objResults[i].CartID + "' class='form-control' placeholder='Patient RN' aria-label='Patient RN' aria-describedby='basic-addon2'>"
                    + "<input type='text' value = '' id='sample-" + objResults[i].CartID + "' class='form-control' placeholder='Sample ID' aria-label='Sample ID' aria-describedby='basic-addon2'>"
                    + "<div class='input-group-append'>"
                    + "<span class='input-group-text' id='identity-" + objResults[i].CartID + "'><i class='fas fa-question fa-sm text-primary pr-4'></i></span>"
                    + "<button class='btn btn-outline-primary' type='button' onclick = 'verifyIdentity(" + objResults[i].CartID + ")' id='submit-" + objResults[i].CartID + "'>Submit</button>"
                    + "</div>"
                    + "</div>"
                    + "</div>"
                    + "<div class='card-footer'>"
                    + "&nbsp;&nbsp;&nbsp;&nbsp;<button class='btn btn-outline-primary' type='button' onclick = 'printDiv(" + objResults[i].CartID + ")' id='print-" + objResults[i].CartID + "'>Print</button>"
                    + "&nbsp;&nbsp;&nbsp;&nbsp;" + fasyringe
                    + "<small class='text-muted text-right'>" + footer + "</small>"
                    + "</div>"
                    + "</div>"
                    + "</div>"
                    + "</div>";
            }

            document.getElementById("requests-carousel-inner").innerHTML = x;
        }
    </script>
    <script>
        //Print division
        function printDiv(val) {
            var uri = "/Patient/GetPrintItems";
            $.getJSON(uri, { id: val }).done(function (data) {
                var count;
                var objResults = JSON.parse(data);
                count = JSON.parse(data).length;
                if (count > 0 && objResults[0].SampleID != null) {
                    var sid = objResults[0].SampleID;
                    var loc = objResults[0].Location;
                    var ar = objResults[0].Items.split(';');

                    //Create SampleId barcode
                    JsBarcode("#barcode", sid, {
                        width: 1,
                        height: 25,
                        fontSize: 10
                    });

                    var divContents = document.getElementById("sample-barcode").innerHTML;
                    var divDemographics = document.getElementById("patient-demographics").innerHTML;

                    var a = window.open('', '', 'height=500, width=500');
                    a.document.write('<html>');
                    a.document.write('<body>');
                    a.document.write(divContents);
                    a.document.write('<hr/>')
                    a.document.write(divDemographics);
                    a.document.write(' | ')
                    a.document.write(loc);
                    a.document.write('<hr/>')
                    for (var i = 0; i < ar.length; i++) {
                        a.document.write(ar[i]);
                        a.document.write('<br/>')
                    }
                    a.document.write('<hr/>')
                    for (var i = 0; i < count; i++) {
                        a.document.write(objResults[i].NoticeText);
                        a.document.write('<br/>')
                    }
                    a.document.write('</body></html>');
                    a.document.close();
                    a.print();
                }
                else {
                    alert("Request has not been aknowledged by TD-Synergy.");
                }
            });
        }
    </script>

    <script>
        function toggleSubmitReq(val) {
            var x = document.getElementById("request-" + val);
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }
    </script>
    <script>
        //Check if patient id matches to sample id before checking out the request
        function verifyIdentity(val) {

            var x = document.getElementById("patient-" + val).value;
            var y = document.getElementById("sample-" + val).value;

            if (x != "" && y != "") {
                var uri = "/Patient/GetPatientSampleIds";
                $.getJSON(uri, { id: val }).done(function (data) {
                    var count;
                    var objResults = JSON.parse(data);
                    count = JSON.parse(data).length;
                    if (count == 1 && objResults[0].SampleID != null) {
                        if (x == objResults[0].PatientID && y == objResults[0].SampleID) {
                            var html = "<i class='fas fa-thumbs-up fa-sm text-primary pr-4'></i>";
                            //Update Cart as CheckedOut if patientID and sampleID matches i.e.valid sample has been taken
                            checkedOut(val);

                        } else {
                            var html = "<i class='fas fa-thumbs-down fa-sm text-primary pr-4'></i>";
                        }
                    }
                    else {
                        var html = "<i class='fas fa-window-close fa-sm text-primary pr-4'></i>";
                    }

                    document.getElementById("identity-" + val).innerHTML = html;
                });
            }
            else {
                var html = "<i class='fas fa-question fa-sm text-primary pr-4'></i>";
                document.getElementById("identity-" + val).innerHTML = html;
            }
        }

        function checkedOut(val) {
            $.ajax({
                url: "/Patient/UpdateCheckedOut",
                method: "Post",
                data: {
                    id: val,
                    user: 1
                }
            }).done(function () {
                alert("Cart " + val + " checked out.");
                //Check out
                //Change syringe icon to vial and inactivate toggle for patient and sample verifications
                document.getElementById("sample-status-" + val).innerHTML = "<i class='fas fa-vials fa-lg text-danger pr-4'></i>";
                document.getElementById("sample-status-" + val).setAttribute("onclick", "");
                document.getElementById("request-" + val).setAttribute("style", "display:none")

            }).error(function () {
                alert("Error in checking out cart");
            });
        }

    </script>

    <script>
        //Prepare badge and modal for transfusion progress
        $(document).ready(function () {
            $('#card-transfusion-pre').hide();
            $('#card-transfusion-progress').hide();
            $('#card-transfusion-post').hide();
            $('#card-transfusion-summary').hide();
            $("#interupt-transfusion").hide();
            $("#interupt-decision-group").hide();
        });
    </script>

    <script>
        //Check if patient id matches to pack id before transfusion is started
        function verifyPack() {
            var p = document.getElementById("unique-patient-id").innerHTML;
            var x = document.getElementById("transfuse-recipient-id").value;
            var y = document.getElementById("transfuse-pack-id").value;
            var z = document.getElementById("card-verify-pack");

            if (x != "" && y != "" && x == p) {
                var uri = "/Patient/GetPatientPackIds";
                $.getJSON(uri, { patid: x, packid: y }).done(function (data) {
                    var count;
                    var objResults = JSON.parse(data);
                    count = JSON.parse(data).length;

                    if (count != 0) {
                        //Unit is matched to the patient.
                        //Check to see if transfusion has been started for this unit on this patient by interogating BBOrder:Transfusions
                        var uri = "/Patient/GetTransfusionDetails";

                        $.getJSON(uri, { patid: x, packid: y }).done(function (data) {
                            var objT = JSON.parse(data);
                            if (objT.length == 0) {
                                //Run function for new transfusions
                                if (objResults[0].IssueInterval != null) {
                                    newTransfusion(objResults[0].IssueInterval);
                                }
                                else {
                                    displayTransfusion(0, "Pack verified but has not been issued", "#F75D59")
                                }

                            }
                            else {
                                //Run function for ongoing transfusions
                                ongoingTransfusion(objT)
                            }
                        });
                    }
                    else {
                        //Unit is not matched to this patient
                        displayTransfusion(0, "Patient and pack do not match", "#F75D59");
                    }
                });
            }
            else {
                //Patient RN entered does not match that diplayed on the form
                displayTransfusion(0, "Patient displayed does not match entered patient RN", "#F75D59");
            }
        }
    </script>
    <script>
        //Prepare modal transfusion if new transfusion
        function newTransfusion(interval) {
            var alert;
            if (interval > 4) {
                alert = "Unit exceeded time from issue to transfusion (" + interval + " hours)";
                displayTransfusion(0, alert, "#FFDB58")
            }
            else {
                alert = "Verification passed. Proceed for transfusion.";
                displayTransfusion(1, alert, "#99C68C")
            }
        }
    </script>
    <script>
        //Prepare modal for ongoing transfusions
        function ongoingTransfusion(objT) {
            var progressText = document.getElementById("text-transfusion-progress");
            var summaryText = document.getElementById('text-transfusion-summary');
            var status = objT[0].current_status;
            var alert = "";
            var color = "000000";
            var str = "";
            var reason = "";
            var i;

            //Build string to display series of transfusion events
            var str = str
                        + "<p>Transfusion commenced at: " + objT[0].TimeStarted
                        + " (T:" + objT[0].pre_temp / 10 + "<sup>o</sup>C,"
                        + " HR:" + objT[0].pre_pulse + " bpm,"
                + " BP:" + objT[0].pre_bp_sys + "/" + objT[0].pre_bp_dia + " mmHg)</p>"

            //Loop through records to display interupts
            for (i = 0; i < objT.length; i++) {
                if (objT[i].interupt_time != null && objT[i].interupt_reason != null) {

                    switch (objT[i].interupt_reason) {
                        case 1:
                            reason = "line blockage.";
                            break;
                        case 2:
                            reason = "febrile reaction.";
                            break;
                        case 3:
                            reason = "allergic reaction.";
                            break;
                        case 4:
                            reason = "moderate to severe adverse reaction requiring investigation.";
                            break;
                    }

                    str = str
                        + "<p>Transfusion interrupted at: " + objT[i].TimeInterupted
                        + " due to " + reason + "</p>"
                }

                if (objT[i].outcome_time != null && objT[i].interupt_outcome != null) {
                    if (objT[i].interupt_outcome == 1) {
                        str = str + "<p>Transfusion recommenced at: " + objT[i].TimeOutcome + "</p>"
                    }
                    else if (objT[i].interupt_outcome == 2) {
                        str = str + "<p>Transfusion terminated at: " + objT[i].TimeOutcome + "</p>"
                    }
                }
            }

            if (objT[0].TimeEnded != null) {
                str = str
                    + "<p>Transfusion completed at: " + objT[0].TimeEnded
                    + " (T:" + objT[0].post_temp / 10 + "<sup>o</sup>C,"
                    + " HR:" + objT[0].post_pulse + " bpm,"
                    + " BP:" + objT[0].post_sys + "/" + objT[0].post_dia + " mmHg)</p>"
            }

            switch (status) {

                case 1: //Transfusion started and in-progress

                    progressText.innerHTML = str;
                    summaryText.innerHTML = str;
                    alert = "Transfusion in progress";
                    color = "#99C68C"
                    displayTransfusion(2, alert, color)
                    break;

                case 2: //Transfusion interrupted

                    progressText.innerHTML = str;
                    summaryText.innerHTML = str;
                    alert = "Transfusion interrupted";
                    color = "#99C68C";
                    displayTransfusion(3, alert, color)
                    break;

                case 3: //Transfusion recommenced or terminated after interruption

                    var j = objT.length - 1; //Go to last interupt record
                    if (objT[j].outcome_time != null && objT[j].interupt_outcome != null) {
                        if (objT[j].interupt_outcome == 1) {
                            alert = "Transfusion recommenced and in progress after interruption"
                            color = "#99C68C"
                            displayTransfusion(2, alert, color);
                        }
                        else if (objT[j].interupt_outcome == 2) {
                            alert = "Transfusion terminated after interruption"
                            color = "#99C68C"
                            displayTransfusion(4, alert, color);
                        }
                    }

                    progressText.innerHTML = str;
                    summaryText.innerHTML = str;
                    break;

                case 4: //Transfusion stopped and awaiting entry of post-transfusion observations

                    alert = "Transfusion stopped. Please enter post-transfusion observations and press complete."
                    color = "#99C68C"

                    displayTransfusion(4, alert, color);
                    progressText.innerHTML = str;
                    summaryText.innerHTML = str;
                    break;

                case 5: //Transfusion completed

                    alert = "Transfusion completed"
                    color = "#99C68C"

                    displayTransfusion(5, alert, color);
                    progressText.innerHTML = str;
                    summaryText.innerHTML = str;
                    break;
            }
        }
    </script>
    <script>
        function displayTransfusion(status, alert, color) {

            var $pre = $('#card-transfusion-pre');
            var $progress = $('#card-transfusion-progress');
            var $post = $('#card-transfusion-post');
            var $summary = $('#card-transfusion-summary')
            var $interuptReason = $("#interupt-transfusion")
            var $interuptOutcome = $("#interupt-decision-group")
            var $interuptButton = $("#btn-interupt-transfusion")
            var $stopButton = $("#btn-stop-transfusion")
            var $completeButton = $("#btn-complete-transfusion")
            var header = document.getElementById("card-verify-pack");

            header.style.background = color;
            header.innerHTML = alert;

            switch (status) {
                case 0://transfusion not allowed
                    $pre.hide();
                    $progress.hide();
                    $post.hide();
                    $summary.hide();
                    $break;

                case 1://start transfusion
                    $pre.show();
                    $progress.hide();
                    $post.hide();
                    $summary.hide();
                    break;

                case 2://monitor transfusion in progress and allow interruption or stopping transfusion
                    $pre.hide();
                    $progress.show();
                    $post.hide();
                    $summary.hide();

                    $interuptReason.hide();
                    $interuptOutcome.hide();
                    $interuptButton.innerHTML = "Interrupt Transfusion";
                    $interuptButton.attr("disabled", false);
                    $stopButton.attr("disabled", false)
                    break;

                case 3://monitor transfusion after interruption and allow recommencement or termination, but not stopping transfusion
                    $pre.hide();
                    $progress.show();
                    $post.hide();
                    $summary.hide();

                    $interuptReason.hide();
                    $interuptOutcome.show();
                    $interuptButton.innerHTML = "Interrupt Transfusion";
                    $interuptButton.attr("disabled", true);
                    $stopButton.attr("disabled", true)
                    break;

                case 4://stop transfusion
                    $pre.hide();
                    $progress.hide();
                    $post.show();
                    $summary.show();
                    break;

                case 5://Transfusion completed
                    $pre.hide();
                    $progress.hide();
                    $post.hide();
                    $summary.show();
                    break;
            }

        }
    </script>
    <script>
        //Update BBOrder database with transfusion start information
        function startTransfusion() {
            //Upload vital signs and start transfusion time to BBOrder using Ajax
            var preItems = new Array();
            var preItem = {};
            var currentdate = new Date();
            preItem.Patnumber = document.getElementById("transfuse-recipient-id").value;
            preItem.Prodnum = document.getElementById("transfuse-pack-id").value;
            preItem.pre_temp = document.getElementById("pre-temp").value;
            preItem.pre_pulse = document.getElementById("pre-pulse").value;
            preItem.pre_bp_sys = document.getElementById("pre-bp-sys").value;
            preItem.pre_bp_dia = document.getElementById("pre-bp-dia").value;
            preItem.start_time = currentdate.getFullYear() + "-"
                + (currentdate.getMonth() + 1) + "-"
                + currentdate.getDate() + " "
                + currentdate.getHours() + ":"
                + currentdate.getMinutes();
            preItem.start_user = 1;
            preItem.current_status = 1;
            preItems.push(preItem);

            //Send the JSON array to InsertCartItems Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Patient/InsertPreTransfusion",
                data: JSON.stringify(preItems),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                    //refresh modal
                    verifyPack();
                }
            });
        };
    </script>
    <script>
        function interuptTransfusion() {

            var x = document.getElementById("btn-interupt-transfusion");
            var str = x.innerHTML;
            var radiovalue = displayRadioValue('interuptReason');

            if (str == "Interrupt Transfusion") {
                $("#interupt-transfusion").show();
                $("#interupt-decision-group").hide();
                x.innerHTML = "Confirm Interruption";
                $("#btn-interupt-transfusion").attr("disabled", false);
            }
            else if (str == "Confirm Interruption") {
                //Upload details of interuption
                $.ajax({
                    url: "/Patient/UpdateInterupt",
                    method: "Post",
                    data: {
                        patid: document.getElementById("transfuse-recipient-id").value,
                        packid: document.getElementById("transfuse-pack-id").value,
                        val: radiovalue, //need to change val according to type of reaction
                        user: 1
                    }
                }).done(function () {
                    alert("Interupt added.");
                    //refresh modal
                    verifyPack();
                }).error(function () {

                });
            }

        }
    </script>
    <script>
        function recommenceTransfusion() {
            var radiovalue = displayRadioValue('interuptDecision');
            //Upload details of recommencement or termination
            $.ajax({
                url: "/Patient/UpdateDecision",
                method: "Post",
                data: {
                    patid: document.getElementById("transfuse-recipient-id").value,
                    packid: document.getElementById("transfuse-pack-id").value,
                    val: radiovalue,
                    user: 1
                }
            }).done(function () {
                alert("Interupt updated.");
                //refresh modal and toggle back button to Interrupt Transfusion
                document.getElementById("btn-interupt-transfusion").innerHTML = "Interrupt Transfusion"
                verifyPack();
            }).error(function () {
                alert("Error in updating.");
            });
        }
    </script>
    <script>
        function stopTransfusion() {
            //Change status to 4 denoting transfusion has stopped
            $.ajax({
                url: "/Patient/StopTransfusion",
                method: "Post",
                data: {
                    patid: document.getElementById("transfuse-recipient-id").value,
                    packid: document.getElementById("transfuse-pack-id").value,
                    val: 4
                }
            }).done(function () {
                alert("Transfusion stopped.");
                //refresh modal
                verifyPack();
            }).error(function () {

            });
        }
    </script>
    <script>
        function completeTransfusion() {
            //Upload details of recommencement or termination
            $.ajax({
                url: "/Patient/CompleteTransfusion",
                method: "Post",
                data: {
                    patid: document.getElementById("transfuse-recipient-id").value,
                    packid: document.getElementById("transfuse-pack-id").value,

                    posttemp: document.getElementById("post-temp").value,
                    postpulse: document.getElementById("post-pulse").value,
                    postbps: document.getElementById("post-bp-sys").value,
                    postbpd: document.getElementById("post-bp-dia").value,

                    user: 1
                }
            }).done(function () {
                alert("Transfusion completed.");
                //refresh modal
                verifyPack();
            }).error(function () {

            });
        }
    </script>

    <script>
        function getRadioVal(form, name) {
            var val;
            // get list of radio buttons with specified name
            var radios = form.elements[name];

            // loop through list of radio buttons
            for (var i = 0, len = radios.length; i < len; i++) {
                if (radios[i].checked) { // radio checked?
                    val = radios[i].value; // if so, hold its value in val
                    break; // and break out of for loop
                }
            }
            return val; // return value of checked radio or undefined if none checked
        }
    </script>
    <script>
        // ************************************************
        // Shopping Cart API
        // ************************************************

        var shoppingCart = (function () {
            // =============================
            // Private methods and propeties
            // =============================
            cart = [];

            // Constructor
            function Item(id, name, price, parameter, count) {
                this.id = id
                this.name = name;
                this.price = price;
                this.parameter = parameter;
                this.count = count;
            }

            // Save cart
            function saveCart() {
                sessionStorage.setItem('shoppingCart', JSON.stringify(cart));
            }

            // Load cart
            function loadCart() {
                cart = JSON.parse(sessionStorage.getItem('shoppingCart'));
            }
            if (sessionStorage.getItem("shoppingCart") != null) {
                loadCart();
            }


            // =============================
            // Public methods and propeties
            // =============================
            var obj = {};

            // Add to cart
            obj.addItemToCart = function (id, name, price, parameter, count) {
                for (var item in cart) {
                    if (cart[item].id === id) {
                        //increment max to 1 for tests
                        if (parameter == 'test') {
                            if (cart[item].count < 1) {
                                cart[item].count++;
                            }
                        }
                        //increment max to 6 for products
                        else {
                            if (cart[item].count < 6) {
                                cart[item].count++;
                            }
                        }
                        saveCart();
                        return;
                    }
                }
                var item = new Item(id, name, price, parameter, count);
                cart.push(item);
                saveCart();
            }
            // Set count from item
            obj.setCountForItem = function (id, count) {
                for (var i in cart) {
                    if (cart[i].id === id) {
                        cart[i].count = count;
                        break;
                    }
                }
            };
            // Remove item from cart
            obj.removeItemFromCart = function (id) {
                for (var item in cart) {
                    if (cart[item].id === id) {
                        if (cart[item].count > 1) {
                            cart[item].count--;
                            if (cart[item].count === 0) {
                                cart.splice(item, 1);
                            }
                        }
                        break;
                    }
                }
                saveCart();
            }

            // Remove all items from cart
            obj.removeItemFromCartAll = function (id) {
                for (var item in cart) {
                    if (cart[item].id === id) {
                        cart.splice(item, 1);
                        break;
                    }
                }
                saveCart();
            }

            // Clear cart
            obj.clearCart = function () {
                sessionStorage.clear();
                cart = [];
                saveCart();
            }

            // Count cart
            obj.totalCount = function () {
                var totalCount = 0;
                for (var item in cart) {
                    totalCount += cart[item].count;
                }
                return totalCount;
            }

            // Total cart
            obj.totalCart = function () {
                var totalCart = 0;
                for (var item in cart) {
                    totalCart += cart[item].price * cart[item].count;
                }
                return Number(totalCart.toFixed(2));
            }

            // List cart
            obj.listCart = function () {
                var cartCopy = [];
                for (i in cart) {
                    item = cart[i];
                    itemCopy = {};
                    for (p in item) {
                        itemCopy[p] = item[p];
                    }
                    itemCopy.total = Number(item.price * item.count).toFixed(2);
                    cartCopy.push(itemCopy)
                }
                return cartCopy;
            }

            // cart : Array
            // Item : Object/Class
            // addItemToCart : Function
            // removeItemFromCart : Function
            // removeItemFromCartAll : Function
            // clearCart : Function
            // countCart : Function
            // totalCart : Function
            // listCart : Function
            // saveCart : Function
            // loadCart : Function
            return obj;
        })();


        // *****************************************
        // Triggers / Events
        // *****************************************
        // Add item
        $('.add-to-cart').click(function (event) {
            event.preventDefault();
            var id = $(this).data('id');
            var name = $(this).data('name');
            var price = Number($(this).data('price'));
            var parameter = $(this).data('parameter');
            shoppingCart.addItemToCart(id, name, price, parameter, 1);
            displayCart();
        });

        // Clear items
        $('.clear-cart').click(function () {
            shoppingCart.clearCart();
            displayCart();
        });


        function displayCart(cfm) {
            var cartArray = shoppingCart.listCart();
            var output = "";
            document.getElementById("warning-confirm-request").innerHTML = "";
            for (var i in cartArray) {
                output += "<tr>"
                    + "<td>" + cartArray[i].id + "</td>"
                    + "<td style='display:none;'>" + cartArray[i].parameter + "</td>"
                    + "<td>" + cartArray[i].name + "</td>"
                    + "<td>" + cartArray[i].price.toFixed(2) + "</td>"
                    + "<td><div class='input-group input-group-sm col-xs-2 form-horizontal'><div class='btn-group'><button class='minus-item input-group-addon btn btn-outline-primary fa fa-minus' data-id=" + cartArray[i].id + " min='1' max='6'></button>"
                    + "<button class='plus-item btn btn-outline-secondary input-group-addon fa fa-plus' data-id=" + cartArray[i].id + " min='1' max='6'></button></div></div></td>"
                    + "<td>" + cartArray[i].count + "</td>"
                    + "<td><button class='delete-item btn btn-outline-danger fa fa-trash' data-id=" + cartArray[i].id + " data-parameter=" + cartArray[i].parameter + "></button></td>"
                    + " = "
                    + "<td>" + cartArray[i].total + "</td>"
                    + "</tr>";
            }
            $('.show-cart').html(output);
            $('.total-cart').html(shoppingCart.totalCart());
            $('.total-count').html(shoppingCart.totalCount());

            displayIndication();
            if (cfm == 0) {
                confirmRequest();
            }
        }

        //Update alerts and indication  notice
        function displayIndication() {

            //Update alert of modal request form and all other alerts and indication
            var productIndication = $('#modal-alert');
            document.getElementById('modal-alert').innerHTML = "";
            var cProcedure = 0;

            for (let i = 0; i < sessionStorage.length; i++) {
                let key = sessionStorage.key(i);
                let value = sessionStorage.getItem(key);
                if (key.startsWith('indication_') && !(value == "")) {
                    productIndication.append("<li class='list-group-item list-group-item-primary'>" + value + "</li></span>");
                    if (value.includes('procedure')) {
                        cProcedure = cProcedure + 1;
                    }
                }
            }
            for (let i = 0; i < sessionStorage.length; i++) {
                let key = sessionStorage.key(i);
                let value = sessionStorage.getItem(key);
                if (key.startsWith('alert_') && !(value == "")) {
                    productIndication.append("<li class='list-group-item list-group-item-danger'>" + value + "</li></span>");
                }
            }
            alertProcedure(cProcedure);
            confirmRequest();
        }

        //Add or clear for badge-procedure on update indication
        function alertProcedure(i) {
            var procedureBadge = document.getElementById('badge-procedure').innerHTML;
            if (i != 0) {
                if (procedureBadge == '') {
                    document.getElementById('badge-procedure').innerHTML = '?';
                }
            }
            else {
                if (procedureBadge == '?') {
                    document.getElementById('badge-procedure').innerHTML = '';
                }
            }
        }

        // Delete item button

        $('.show-cart').on("click", ".delete-item", function (event) {
            var id = $(this).data('id')
            var parameter = $(this).data('parameter')

            shoppingCart.removeItemFromCartAll(id);

            //Remove alerts and indication if there are no products ordered for that type after deletion of item
            var cartArray = shoppingCart.listCart();
            var count = 0;
            var countp = 0;

            for (let i = 0; i < sessionStorage.length; i++) {
                let key = sessionStorage.key(i);
                let value = sessionStorage.getItem(key);
                if (key == 'shoppingCart') {
                    if (value.includes(parameter)) {
                        count = count + 1
                    }
                }
                if (key.startsWith('indication_') && !(value == "")) {
                    if (value.includes('procedure')) {
                        countp = countp + 1;
                    }
                }
            }

            if (count == 0) {
                sessionStorage.removeItem('alert_' + parameter + '');
                sessionStorage.removeItem('indication_' + parameter + '');
                document.getElementById('alert_' + parameter + '').innerHTML = '';
                document.getElementById('' + parameter + '').innerHTML = '';
            }

            //alertProcedure(countp);
            displayCart();
        })


        // -1
        $('.show-cart').on("click", ".minus-item", function (event) {
            var id = $(this).data('id')
            shoppingCart.removeItemFromCart(id);
            displayCart();
        })
        // +1
        $('.show-cart').on("click", ".plus-item", function (event) {
            var id = $(this).data('id')
            shoppingCart.addItemToCart(id);
            displayCart();
        })

        // Item count input
        $('.show-cart').on("change", ".item-count", function (event) {
            var id = $(this).data('id');
            var count = Number($(this).val());
            shoppingCart.setCountForItem(id, count);
            displayCart();
        });

        displayCart();
    </script>


</body>
</html>



