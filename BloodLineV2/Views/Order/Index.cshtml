@model IEnumerable<BloodLineV2.Models.Cart>

@{
    ViewBag.Title = "Request List";
    Layout = "~/Views/Shared/_Layout_Patient.cshtml";
}

<head>
    <title>UMMC Blood Transfusion Information System</title>

    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
</head>

<h2>Blood requests </h2>
@using (Html.BeginForm())
{
    <p>
        @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}


<table class="table table-striped table-sm">
    <thead>
        <tr>
            <th>
                Creation Date
            </th>
            <th>

            </th>
            <th>
                Location
            </th>
            <th>
                Sample ID
            </th>
            <th>
                Patient ID
            </th>
            <th>
                Patient Name
            </th>
            <th>
                Urgency
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            switch (item.Urgency)
            {
                case 1:
                @:<tr class='table-danger'>
                break;

                case 2:
                @:<tr class='table-warning'>
                break;

                case 3:
                @:<tr class='table-info'>
                break;

                case 4:
                @:<tr class='table-secondary'>
                break;

                default:
                @:<tr class='table-primary'>
                break;
            }

            <td>
                @item.DateCreated.ToString("dd/MM/yyyy HH:mm")
            </td>
            <!-- Display status-->
            <td>
                @if (item.CheckedOut == 1)
                {
                    <i class="fa fa-syringe" style="color:red" data-toggle="tooltip" title="@item.CheckedOutTime.Value.ToString("dd/MM/yy HH:mm")"></i>
                }
                @if (item.CheckedIn == 1)
                {
                    <i class="fa fa-barcode" style="color:black" data-toggle="tooltip" title="@item.CheckedInTime.Value.ToString("dd/MM/yy HH:mm")"></i>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td class="tooltip-request-details" id=@item.SampleID>
                <a href="#" data-toggle="modal" data-id=@item.CartID data-target="#request-details" class="showRequestDetails">
                    @item.CartID | @item.SampleID
                </a>
            </td>
            <td>
                @Html.ActionLink(item.PatientID, "Details", "Patient", new { id = item.PatientID.PadLeft(20, '0') }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PatientName)
            </td>
            <td>
                @if (item.RequiredInterval <= 0)
                {
                    <i class="fa fa-stopwatch" style="color:crimson"></i>
                }
                else
                {
                    <div class="progress" style="margin-bottom: 0 !important">
                        @{var rInt = item.RequiredInterval; }
                        @if (rInt < 120)
                        {
                            <div class="progress-bar bg-danger" style="width: @((2880 - rInt)*100/2880)%"></div>
                        }
                        else if (rInt >= 120 && rInt < 480)
                        {
                            <div class="progress-bar bg-warning" style="width: @((2880 - rInt)*100/2880)%"></div>
                        }
                        else if (rInt >= 480 && rInt < 1440)
                        {
                            <div class="progress-bar bg-primary" style="width: @((2880 - rInt)*100/2880)%"></div>
                        }
                        else if (rInt >= 1440 && rInt < 2880)
                        {
                            <div class="progress-bar bg-success" style="width: @((2880 - rInt)*100/2880)%"></div>
                        }
                        else if (rInt >= 2880)
                        {
                            <div class="progress-bar" style="width: 0%"></div>
                        }
                    </div>
                }

            </td>
            @:</tr>
        <tr class="table-light">
            <td colspan="6" style="font-size:x-small">
                @{
                    if (item.NumberRc.HasValue)
                    {
                        for (var i = 0; i < item.NumberRc; i++)
                        {
                            <i class="fa fa-square" style="color:crimson"></i>
                        }
                    }

                    if (item.NumberPl.HasValue)
                    {
                        for (var i = 0; i < item.NumberPl; i++)
                        {
                            <i class="fa fa-square" style="color:orange"></i>
                        }
                    }

                    if (item.NumberPp.HasValue)
                    {
                        for (var i = 0; i < item.NumberPp; i++)
                        {
                            <i class="fa fa-square" style="color:yellowgreen"></i>
                        }
                    }
                }
                @Html.DisplayFor(modelItem => item.Items)
            </td>
        </tr>
        }
    </tbody>
</table>

<!--Modal form - Request Details-->
<div class="modal fade" id="request-details" tabindex="-1" role="dialog" aria-labelledby="RequestDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <div class="modal-title" name="RequestDetailsModalLabel" id="id" style="font-weight:bold; color:white">Request Details</div>
                            
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                        
            <div class="modal-body">
                <div>
                    <ul class="list-inline" id="list-request-details-items">
                        <!--Inline list Items-->
                    </ul>
                </div>
                <table class=" table table-striped" id="table-request-details">
                    <thead class="thead-light">
                        <tr>
                            <th>Activity</th>
                            <th>Time</th>
                            <th>Doctor</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr></tr>
                    </tbody>
                </table>
                <div>
                    <h6> 
                        <span class="btn-group btn-group-toggle mb-2" data-toggle="buttons">
                            <label class="btn btn-outline-info">
                                <input type="radio" name="rb-review-status" value="1">
                                <i class="fa fa-eye"></i>
                            </label>
                            <label class="btn btn-outline-info">
                                <input type="radio" name="rb-review-status" value="2">
                                <i class="fa fa-check"></i>
                            </label>
                            <label class="btn btn-outline-info">
                                <input type="radio" name="rb-review-status" value="3">
                                <i class="fa fa-phone"></i>
                            </label>
                            <label class="btn btn-outline-info">
                                <input type="radio" name="rb-review-status" value="4">
                                <i class="fa fa-times"></i>
                            </label>
                        </span>
                        <span id="request-review-details">
                            <!--Update message depending on status-->
                            Request reviewed and approved by 1 at 04/06/20 10:11
                        </span>
                    </h6>
                </div>
                
                <div>
                    <dl class="row" id="list-request-details">
                        <!--Definition list for notices and alerts-->
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).on("click", ".showRequestDetails", function () {
        var id = $(this).data('id');
        var uri = "/Order/GetRequestDetails";

        $.getJSON(uri, { id: id }).done(function (data) {
            var count;
            var objResults, listItems, listNotices, row;
            listItems = "";
            listNotices = "";
            row = "";

            $('[name="RequestDetailsModalLabel"]').text("Request Details: " + id);
            $('[name="RequestDetailsModalLabel"]').attr('id', id);
            //Clear any previous records
            $("#list-request-details").empty().append(listNotices);
            $("#list-request-details-items").empty().append(listItems);
            $("#rem-1").remove();
            $("#rem-2").remove();
            $("#rem-3").remove();
            $("#rem-4").remove();

            count = JSON.parse(data).length;
            //Records available for request
            if (count > 0) {

                objResults = JSON.parse(data);

                var rCol, rText;
                switch (objResults[0].Urgency) {
                    case 1:
                        rCol = "danger";
                        rText = "Immediate";
                        break;
                    case 2:
                        rCol = "warning";
                        rText = "Urgent";
                        break;
                    case 3:
                        rCol = "info";
                        rText = "Scheduled"
                        break;
                    case 4:
                        rCol = "light";
                        rText = "Test only";
                        break;
                    default:
                        rCol = "light";
                        rText = ""
                }

                var x = objResults[0].CheckedOutTime;
                var y = objResults[0].CheckedOutID;
                var z = objResults[0].CheckedInTime;

                //Update review-status button if any review activity has occurred
                displayRequestReviewDetails(id);
                updateRadioValueId('rb-review-status', id); //Assign id for each radiobutton as CartId

                //List of activities and time
                row = "<tr class='table-primary' id='rem-1'><td>Request created</td><td>" + objResults[0].DateCreated + "</td><td>" + objResults[0].UserID + "</td></tr>"
                    + "<tr class='table-secondary' id='rem-2'><td>Request submitted</td><td>" + x + "</td><td>" + y + "</td></tr>"
                    + "<tr class='table-success' id='rem-3'><td>Request received</td><td>" + z + "</td><td></td></tr>"
                    + "<tr class='table-" + rCol + "' id='rem-4'><td>Required time</td><td>" + objResults[0].RequiredTime + "</td><td>" + rText + "</td></tr>"

                $("#table-request-details tr:last").after(row);

                //Definition list notices and alerts
                var init = 0;
                var c;
                for (var i = 0; i < objResults.length; i++) {
                    c = objResults[i].CategoryId;
                    if (init == c) {
                        listNotices = "<dt class='col-sm-2'></dt>"
                            + "<dd class='col-sm-10'>" + objResults[i].NoticeText + "</dd>";
                    }
                    else {
                        listNotices = "<dt class='col-sm-2'>" + objResults[i].CategoryName + "</dt>"
                            + "<dd class='col-sm-10'>" + objResults[i].NoticeText + "</dd>";
                    }

                    $("#list-request-details").append(listNotices);
                    init = c;
                }

                //Convert Item string into array and make a list
                var arrItem = objResults[0].Items.split(";");
                for (var j = 0; j < arrItem.length; j++) {
                    listItems = "<li class='list-inline-item'>" + arrItem[j] + "</li>"
                    $("#list-request-details-items").append(listItems);
                }
            }
        });
    });

</script>

<script>
    $(document).ready(function () {

        $("input[name='Isactive']").change(function () {
            $(this).closest("form").submit();
        });

    });
</script>

<script>
    function updateRadioValueId(radioname, id) {
        var ele = document.getElementsByName(radioname);

        for (i = 0; i < ele.length; i++) {
            ele[i].id = id;
        }
    }
</script>

<script>
    $(document).ready(function () {

        $(document).on("change", "input[name='rb-review-status']", function (e) {
            var id = e.target.id;
            var status = e.target.value;

            $.ajax({
                url: "/Order/UpdateReviewStatus",
                method: "Post",
                data: {
                    id: id,
                    status: status,
                    user: 1
                }
            }).done(function () {
                alert("Review status for " + id + " modified.");
                //Update #request-review-details
                displayRequestReviewDetails(id);

            }).error(function () {
                alert("Error in modifying review status");
            });
        });

    });

</script>
<script>
    function displayRequestReviewDetails(id) {
        var uri = "/Order/GetReviewStatusDetails";
        $.getJSON(uri, { id: id }).done(function (data) {

            count = JSON.parse(data).length;
            //Records available for request
            if (count > 0) {
                objResults = JSON.parse(data);
                var text = '';
                var status = objResults[0].ReviewStatus;
                var time = objResults[0].ReviewedTime;
                var user = objResults[0].ReviewedID;
                switch (status) {
                    case 1:
                        text = time + ': Viewed by ' + user;
                        break;
                    case 2:
                        text = time + ': Approved by ' + user;
                        break;
                    case 3:
                        text = time + ': Pending decision. Contact TMD for clarification.';
                        break;
                    case 4:
                        text = time + ': Not approved. Contact TMD for clarification.';
                        break;
                    default:
                        text = 'Pending';
                        break;
                }
                $('#request-review-details').text(text);
            }
        });
    }
</script>